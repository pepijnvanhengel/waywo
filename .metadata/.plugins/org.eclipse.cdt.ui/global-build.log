19:33:47 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     142 bytes (0.4% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (142 bytes):

Writing | ################################################## | 100% 0.07s

avrdude: 142 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 142 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.04s

avrdude: verifying ...
avrdude: 142 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
19:36:03 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     186 bytes (0.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (186 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 186 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 186 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 186 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
19:36:04 **** Incremental Build of configuration Debug for project BlinkyLight ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkyLight.elf
AVR Memory Usage
----------------
Device: atmega328

Program:    3532 bytes (10.8% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkyLight.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkyLight.hex"
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: writing flash (3532 bytes):

Writing | ################################################## | 100% 1.64s

avrdude: 3532 bytes of flash written
avrdude: verifying flash memory against BlinkyLight.hex:
avrdude: load data flash data from input file BlinkyLight.hex:
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: input file BlinkyLight.hex contains 3532 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.01s

avrdude: verifying ...
avrdude: 3532 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
19:36:08 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     142 bytes (0.4% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (142 bytes):

Writing | ################################################## | 100% 0.08s

avrdude: 142 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 142 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.04s

avrdude: verifying ...
avrdude: 142 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
19:36:09 **** Incremental Build of configuration Release for project Week2_1 ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Week2_1.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     290 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Evcc -Uflash:w:Week2_1.hex:a
avrdude: WARNING: -E option not supported by this programmer type

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Week2_1.hex"
avrdude: input file Week2_1.hex auto detected as Intel Hex
avrdude: writing flash (290 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 290 bytes of flash written
avrdude: verifying flash memory against Week2_1.hex:
avrdude: load data flash data from input file Week2_1.hex:
avrdude: input file Week2_1.hex auto detected as Intel Hex
avrdude: input file Week2_1.hex contains 290 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 290 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
19:36:11 **** Incremental Build of configuration Release for project WhatAreYouDoing ****
make all 
Building file: ../main.c
Invoking: Cross GCC Compiler
avr-gcc -O3 -Wall -c -fmessage-length=0 -MMD -MP -MF"main.d" -MT"main.o" -o "main.o" "../main.c"
In file included from ../main.c:8:
c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h:85:3: warning: #warning "F_CPU not defined for <util/delay.h>"
../main.c: In function 'main':
../main.c:16: error: expected ';' before ':' token
make: *** [main.o] Error 1
19:40:26 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     186 bytes (0.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (186 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 186 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 186 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 186 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
19:40:27 **** Incremental Build of configuration Debug for project BlinkyLight ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkyLight.elf
AVR Memory Usage
----------------
Device: atmega328

Program:    3532 bytes (10.8% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkyLight.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkyLight.hex"
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: writing flash (3532 bytes):

Writing | ################################################## | 100% 1.66s

avrdude: 3532 bytes of flash written
avrdude: verifying flash memory against BlinkyLight.hex:
avrdude: load data flash data from input file BlinkyLight.hex:
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: input file BlinkyLight.hex contains 3532 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.01s

avrdude: verifying ...
avrdude: 3532 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
19:40:31 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     142 bytes (0.4% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (142 bytes):

Writing | ################################################## | 100% 0.07s

avrdude: 142 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 142 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.04s

avrdude: verifying ...
avrdude: 142 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
19:40:32 **** Incremental Build of configuration Release for project Week2_1 ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Week2_1.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     290 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Evcc -Uflash:w:Week2_1.hex:a
avrdude: WARNING: -E option not supported by this programmer type

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Week2_1.hex"
avrdude: input file Week2_1.hex auto detected as Intel Hex
avrdude: writing flash (290 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 290 bytes of flash written
avrdude: verifying flash memory against Week2_1.hex:
avrdude: load data flash data from input file Week2_1.hex:
avrdude: input file Week2_1.hex auto detected as Intel Hex
avrdude: input file Week2_1.hex contains 290 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 290 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
19:40:33 **** Incremental Build of configuration Release for project WhatAreYouDoing ****
make all 
Building file: ../main.c
Invoking: Cross GCC Compiler
avr-gcc -O3 -Wall -c -fmessage-length=0 -MMD -MP -MF"main.d" -MT"main.o" -o "main.o" "../main.c"
In file included from ../main.c:8:
c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h:85:3: warning: #warning "F_CPU not defined for <util/delay.h>"
../main.c: In function 'main':
../main.c:16: error: expected ';' before ':' token
make: *** [main.o] Error 1
19:41:01 **** Incremental Build of configuration Release for project Week2_1 ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Week2_1.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     290 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Evcc -Uflash:w:Week2_1.hex:a
avrdude: WARNING: -E option not supported by this programmer type

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Week2_1.hex"
avrdude: input file Week2_1.hex auto detected as Intel Hex
avrdude: writing flash (290 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 290 bytes of flash written
avrdude: verifying flash memory against Week2_1.hex:
avrdude: load data flash data from input file Week2_1.hex:
avrdude: input file Week2_1.hex auto detected as Intel Hex
avrdude: input file Week2_1.hex contains 290 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 290 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
09:57:34 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     186 bytes (0.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (186 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 186 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 186 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 186 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:00:22 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     186 bytes (0.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (186 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 186 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 186 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 186 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:00:38 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     218 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (218 bytes):

Writing | ################################################## | 100% 0.11s

avrdude: 218 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 218 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.06s

avrdude: verifying ...
avrdude: 218 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:01:08 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     182 bytes (0.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (182 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 182 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 182 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 182 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:07:24 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     226 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (226 bytes):

Writing | ################################################## | 100% 0.12s

avrdude: 226 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 226 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 226 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:07:51 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     200 bytes (0.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (200 bytes):

Writing | ################################################## | 100% 0.11s

avrdude: 200 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 200 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.06s

avrdude: verifying ...
avrdude: 200 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:08:29 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     202 bytes (0.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (202 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 202 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 202 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.06s

avrdude: verifying ...
avrdude: 202 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:13:51 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     202 bytes (0.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (202 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 202 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 202 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.06s

avrdude: verifying ...
avrdude: 202 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:14:30 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     202 bytes (0.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (202 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 202 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 202 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.06s

avrdude: verifying ...
avrdude: 202 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:19:35 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     238 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (238 bytes):

Writing | ################################################## | 100% 0.12s

avrdude: 238 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 238 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 238 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:23:04 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     238 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (238 bytes):

Writing | ################################################## | 100% 0.12s

avrdude: 238 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 238 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 238 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:24:41 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     238 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (238 bytes):

Writing | ################################################## | 100% 0.12s

avrdude: 238 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 238 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 238 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:31:14 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SevenSegmentDisplay.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SevenSegmentDisplay.map -mmcu=atmega328 -o "SevenSegmentDisplay.elf"  ./main.o   
Finished building target: SevenSegmentDisplay.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SevenSegmentDisplay.elf  "SevenSegmentDisplay.hex"
Finished building: SevenSegmentDisplay.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     238 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (238 bytes):

Writing | ################################################## | 100% 0.12s

avrdude: 238 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 238 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 238 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:31:26 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SevenSegmentDisplay.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SevenSegmentDisplay.map -mmcu=atmega328 -o "SevenSegmentDisplay.elf"  ./main.o   
Finished building target: SevenSegmentDisplay.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SevenSegmentDisplay.elf  "SevenSegmentDisplay.hex"
Finished building: SevenSegmentDisplay.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     238 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (238 bytes):

Writing | ################################################## | 100% 0.12s

avrdude: 238 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 238 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 238 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:41:59 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SevenSegmentDisplay.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SevenSegmentDisplay.map -mmcu=atmega328 -o "SevenSegmentDisplay.elf"  ./main.o   
Finished building target: SevenSegmentDisplay.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SevenSegmentDisplay.elf  "SevenSegmentDisplay.hex"
Finished building: SevenSegmentDisplay.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     260 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (260 bytes):

Writing | ################################################## | 100% 0.14s

avrdude: 260 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 260 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 260 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:44:09 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SevenSegmentDisplay.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SevenSegmentDisplay.map -mmcu=atmega328 -o "SevenSegmentDisplay.elf"  ./main.o   
Finished building target: SevenSegmentDisplay.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SevenSegmentDisplay.elf  "SevenSegmentDisplay.hex"
Finished building: SevenSegmentDisplay.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     282 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (282 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 282 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 282 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 282 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:44:35 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SevenSegmentDisplay.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SevenSegmentDisplay.map -mmcu=atmega328 -o "SevenSegmentDisplay.elf"  ./main.o   
Finished building target: SevenSegmentDisplay.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SevenSegmentDisplay.elf  "SevenSegmentDisplay.hex"
Finished building: SevenSegmentDisplay.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     240 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (240 bytes):

Writing | ################################################## | 100% 0.12s

avrdude: 240 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 240 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 240 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:45:32 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SevenSegmentDisplay.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SevenSegmentDisplay.map -mmcu=atmega328 -o "SevenSegmentDisplay.elf"  ./main.o   
Finished building target: SevenSegmentDisplay.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SevenSegmentDisplay.elf  "SevenSegmentDisplay.hex"
Finished building: SevenSegmentDisplay.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     240 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (240 bytes):

Writing | ################################################## | 100% 0.12s

avrdude: 240 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 240 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 240 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:46:00 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SevenSegmentDisplay.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SevenSegmentDisplay.map -mmcu=atmega328 -o "SevenSegmentDisplay.elf"  ./main.o   
Finished building target: SevenSegmentDisplay.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SevenSegmentDisplay.elf  "SevenSegmentDisplay.hex"
Finished building: SevenSegmentDisplay.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     240 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (240 bytes):

Writing | ################################################## | 100% 0.12s

avrdude: 240 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 240 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 240 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:00:58 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SevenSegmentDisplay.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SevenSegmentDisplay.map -mmcu=atmega328 -o "SevenSegmentDisplay.elf"  ./main.o   
Finished building target: SevenSegmentDisplay.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SevenSegmentDisplay.elf  "SevenSegmentDisplay.hex"
Finished building: SevenSegmentDisplay.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     268 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (268 bytes):

Writing | ################################################## | 100% 0.14s

avrdude: 268 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 268 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 268 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:03:15 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SevenSegmentDisplay.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SevenSegmentDisplay.map -mmcu=atmega328 -o "SevenSegmentDisplay.elf"  ./main.o   
Finished building target: SevenSegmentDisplay.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SevenSegmentDisplay.elf  "SevenSegmentDisplay.hex"
Finished building: SevenSegmentDisplay.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     268 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (268 bytes):

Writing | ################################################## | 100% 0.14s

avrdude: 268 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 268 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 268 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:18:37 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SevenSegmentDisplay.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SevenSegmentDisplay.map -mmcu=atmega328 -o "SevenSegmentDisplay.elf"  ./main.o   
Finished building target: SevenSegmentDisplay.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SevenSegmentDisplay.elf  "SevenSegmentDisplay.hex"
Finished building: SevenSegmentDisplay.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     268 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (268 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 268 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 268 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 268 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:18:50 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SevenSegmentDisplay.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SevenSegmentDisplay.map -mmcu=atmega328 -o "SevenSegmentDisplay.elf"  ./main.o   
Finished building target: SevenSegmentDisplay.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SevenSegmentDisplay.elf  "SevenSegmentDisplay.hex"
Finished building: SevenSegmentDisplay.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     268 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (268 bytes):

Writing | ################################################## | 100% 0.14s

avrdude: 268 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 268 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 268 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:19:04 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SevenSegmentDisplay.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SevenSegmentDisplay.map -mmcu=atmega328 -o "SevenSegmentDisplay.elf"  ./main.o   
Finished building target: SevenSegmentDisplay.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SevenSegmentDisplay.elf  "SevenSegmentDisplay.hex"
Finished building: SevenSegmentDisplay.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     268 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (268 bytes):

Writing | ################################################## | 100% 0.13s

avrdude: 268 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 268 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 268 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:22:12 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SevenSegmentDisplay.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SevenSegmentDisplay.map -mmcu=atmega328 -o "SevenSegmentDisplay.elf"  ./main.o   
Finished building target: SevenSegmentDisplay.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SevenSegmentDisplay.elf  "SevenSegmentDisplay.hex"
Finished building: SevenSegmentDisplay.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     268 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (268 bytes):

Writing | ################################################## | 100% 0.13s

avrdude: 268 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 268 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 268 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:26:09 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SevenSegmentDisplay.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SevenSegmentDisplay.map -mmcu=atmega328 -o "SevenSegmentDisplay.elf"  ./main.o   
Finished building target: SevenSegmentDisplay.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SevenSegmentDisplay.elf  "SevenSegmentDisplay.hex"
Finished building: SevenSegmentDisplay.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     326 bytes (1.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (326 bytes):

Writing | ################################################## | 100% 0.17s

avrdude: 326 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 326 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.09s

avrdude: verifying ...
avrdude: 326 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:28:20 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SevenSegmentDisplay.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SevenSegmentDisplay.map -mmcu=atmega328 -o "SevenSegmentDisplay.elf"  ./main.o   
Finished building target: SevenSegmentDisplay.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SevenSegmentDisplay.elf  "SevenSegmentDisplay.hex"
Finished building: SevenSegmentDisplay.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     268 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (268 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 268 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 268 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 268 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:32:11 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SevenSegmentDisplay.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SevenSegmentDisplay.map -mmcu=atmega328 -o "SevenSegmentDisplay.elf"  ./main.o   
Finished building target: SevenSegmentDisplay.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SevenSegmentDisplay.elf  "SevenSegmentDisplay.hex"
Finished building: SevenSegmentDisplay.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     294 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (294 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 294 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 294 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 294 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:00:38 **** Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     150 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (150 bytes):

Writing | ################################################## | 100% 0.08s

avrdude: 150 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 150 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.04s

avrdude: verifying ...
avrdude: 150 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:02:07 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     200 bytes (0.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (200 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 200 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 200 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.06s

avrdude: verifying ...
avrdude: 200 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:03:00 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     170 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (170 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 170 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 170 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 170 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:04:22 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     168 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (168 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 168 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 168 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 168 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:04:37 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     150 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (150 bytes):

Writing | ################################################## | 100% 0.08s

avrdude: 150 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 150 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.04s

avrdude: verifying ...
avrdude: 150 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:10:56 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     184 bytes (0.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (184 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 184 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 184 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 184 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:11:17 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     168 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (168 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 168 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 168 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 168 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:13:03 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     168 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (168 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 168 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 168 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 168 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:23:12 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     168 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (168 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 168 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 168 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 168 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:01:03 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     158 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (158 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 158 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 158 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 158 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:01:19 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     150 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (150 bytes):

Writing | ################################################## | 100% 0.08s

avrdude: 150 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 150 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.04s

avrdude: verifying ...
avrdude: 150 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:01:50 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     168 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (168 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 168 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 168 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 168 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:12:01 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     184 bytes (0.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (184 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 184 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 184 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 184 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
18:30:32 **** Build of configuration Release for project AlarmClock ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:4:21: error: hd44780.h: No such file or directory
../main.c: In function 'main':
../main.c:12: warning: implicit declaration of function 'lcd_init'
../main.c:13: warning: implicit declaration of function 'lcd_clrscr'
../main.c:14: warning: implicit declaration of function 'lcd_puts'
make: *** [main.o] Error 1
18:31:04 **** Incremental Build of configuration Release for project AlarmClock ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:10: warning: implicit declaration of function 'lcd_init'
../main.c:11: warning: implicit declaration of function 'lcd_clrscr'
../main.c:12: warning: implicit declaration of function 'lcd_puts'
Finished building: ../main.c
 
Building target: AlarmClock.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,AlarmClock.map -mmcu=atmega328 -o "AlarmClock.elf"  ./main.o   
./main.o: In function `main':
main.c:(.text.main+0x8): undefined reference to `lcd_init'
main.c:(.text.main+0xc): undefined reference to `lcd_clrscr'
main.c:(.text.main+0x14): undefined reference to `lcd_puts'
main.c:(.text.main+0x26): undefined reference to `lcd_init'
main.c:(.text.main+0x2a): undefined reference to `lcd_clrscr'
main.c:(.text.main+0x32): undefined reference to `lcd_puts'
make: *** [AlarmClock.elf] Error 1
18:31:27 **** Incremental Build of configuration Release for project AlarmClock ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:10: warning: implicit declaration of function 'lcd_init'
../main.c:11: warning: implicit declaration of function 'lcd_clrscr'
../main.c:12: warning: implicit declaration of function 'lcd_puts'
Finished building: ../main.c
 
Building target: AlarmClock.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,AlarmClock.map -mmcu=atmega328 -o "AlarmClock.elf"  ./main.o   
./main.o: In function `main':
main.c:(.text.main+0x8): undefined reference to `lcd_init'
main.c:(.text.main+0xc): undefined reference to `lcd_clrscr'
main.c:(.text.main+0x14): undefined reference to `lcd_puts'
main.c:(.text.main+0x26): undefined reference to `lcd_init'
main.c:(.text.main+0x2a): undefined reference to `lcd_clrscr'
main.c:(.text.main+0x32): undefined reference to `lcd_puts'
make: *** [AlarmClock.elf] Error 1
18:38:44 **** Incremental Build of configuration Release for project AlarmClock ****
make all 
Building target: AlarmClock.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,AlarmClock.map -mmcu=atmega328 -o "AlarmClock.elf"  ./main.o   
./main.o: In function `main':
main.c:(.text.main+0x8): undefined reference to `lcd_init'
main.c:(.text.main+0xc): undefined reference to `lcd_clrscr'
main.c:(.text.main+0x14): undefined reference to `lcd_puts'
main.c:(.text.main+0x26): undefined reference to `lcd_init'
main.c:(.text.main+0x2a): undefined reference to `lcd_clrscr'
main.c:(.text.main+0x32): undefined reference to `lcd_puts'
make: *** [AlarmClock.elf] Error 1
18:53:34 **** Incremental Build of configuration Release for project AlarmClock ****
make all 
Building file: ../hd44780.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"hd44780.d" -MT"hd44780.o" -c -o "hd44780.o" "../hd44780.c"
In file included from ../hd44780.c:8:
../hd44780.h:10:30: error: hd44780_settings.h: No such file or directory
../hd44780.c:32:4: error: #error LCD_BITS is not defined or not valid.
../hd44780.c:36:4: error: #error WAIT_MODE is not defined or not valid.
../hd44780.c:40:4: error: #error RW_LINE_IMPLEMENTED is not defined or not valid.
../hd44780.c:48:4: error: #error LCD_DISPLAYS is not defined or not valid.
../hd44780.c: In function 'lcd_e_port_low':
../hd44780.c:170: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:170: error: (Each undeclared identifier is reported only once
../hd44780.c:170: error: for each function it appears in.)
../hd44780.c:170: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_port_high':
../hd44780.c:193: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:193: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_ddr_low':
../hd44780.c:216: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:216: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_ddr_high':
../hd44780.c:239: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:239: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_write':
../hd44780.c:404: error: 'LCD_RS_PORT' undeclared (first use in this function)
../hd44780.c:404: error: 'LCD_RS_PIN' undeclared (first use in this function)
../hd44780.c:446: error: 'LCD_DB7_PORT' undeclared (first use in this function)
../hd44780.c:446: error: 'LCD_DB7_PIN' undeclared (first use in this function)
../hd44780.c:447: error: 'LCD_DB6_PORT' undeclared (first use in this function)
../hd44780.c:447: error: 'LCD_DB6_PIN' undeclared (first use in this function)
../hd44780.c:448: error: 'LCD_DB5_PORT' undeclared (first use in this function)
../hd44780.c:448: error: 'LCD_DB5_PIN' undeclared (first use in this function)
../hd44780.c:449: error: 'LCD_DB4_PORT' undeclared (first use in this function)
../hd44780.c:449: error: 'LCD_DB4_PIN' undeclared (first use in this function)
../hd44780.c:450: error: 'LCD_DB3_PORT' undeclared (first use in this function)
../hd44780.c:450: error: 'LCD_DB3_PIN' undeclared (first use in this function)
../hd44780.c:451: error: 'LCD_DB2_PORT' undeclared (first use in this function)
../hd44780.c:451: error: 'LCD_DB2_PIN' undeclared (first use in this function)
../hd44780.c:452: error: 'LCD_DB1_PORT' undeclared (first use in this function)
../hd44780.c:452: error: 'LCD_DB1_PIN' undeclared (first use in this function)
../hd44780.c:453: error: 'LCD_DB0_PORT' undeclared (first use in this function)
../hd44780.c:453: error: 'LCD_DB0_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_init':
../hd44780.c:567: error: 'LCD_RS_PORT' undeclared (first use in this function)
../hd44780.c:567: error: 'LCD_RS_PIN' undeclared (first use in this function)
../hd44780.c:571: error: 'LCD_DB7_PORT' undeclared (first use in this function)
../hd44780.c:571: error: 'LCD_DB7_PIN' undeclared (first use in this function)
../hd44780.c:572: error: 'LCD_DB6_PORT' undeclared (first use in this function)
../hd44780.c:572: error: 'LCD_DB6_PIN' undeclared (first use in this function)
../hd44780.c:573: error: 'LCD_DB5_PORT' undeclared (first use in this function)
../hd44780.c:573: error: 'LCD_DB5_PIN' undeclared (first use in this function)
../hd44780.c:574: error: 'LCD_DB4_PORT' undeclared (first use in this function)
../hd44780.c:574: error: 'LCD_DB4_PIN' undeclared (first use in this function)
../hd44780.c:602: error: 'DELAY_RESET' undeclared (first use in this function)
../hd44780.c:673: error: 'ActiveDisplay' undeclared (first use in this function)
../hd44780.c:675: error: 'LCD_DISPLAY_LINES' undeclared (first use in this function)
../hd44780.c:676: error: 'LCD_DISPLAY2_LINES' undeclared (first use in this function)
../hd44780.c:685: error: 'LCD_DB3_PORT' undeclared (first use in this function)
../hd44780.c:685: error: 'LCD_DB3_PIN' undeclared (first use in this function)
../hd44780.c:688: error: 'LCD_DB2_PORT' undeclared (first use in this function)
../hd44780.c:688: error: 'LCD_DB2_PIN' undeclared (first use in this function)
make: *** [hd44780.o] Error 1
18:53:39 **** Incremental Build of configuration Release for project AlarmClock ****
make all 
Building file: ../hd44780.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"hd44780.d" -MT"hd44780.o" -c -o "hd44780.o" "../hd44780.c"
In file included from ../hd44780.c:8:
../hd44780.h:10:30: error: hd44780_settings.h: No such file or directory
../hd44780.c:32:4: error: #error LCD_BITS is not defined or not valid.
../hd44780.c:36:4: error: #error WAIT_MODE is not defined or not valid.
../hd44780.c:40:4: error: #error RW_LINE_IMPLEMENTED is not defined or not valid.
../hd44780.c:48:4: error: #error LCD_DISPLAYS is not defined or not valid.
../hd44780.c: In function 'lcd_e_port_low':
../hd44780.c:170: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:170: error: (Each undeclared identifier is reported only once
../hd44780.c:170: error: for each function it appears in.)
../hd44780.c:170: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_port_high':
../hd44780.c:193: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:193: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_ddr_low':
../hd44780.c:216: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:216: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_ddr_high':
../hd44780.c:239: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:239: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_write':
../hd44780.c:404: error: 'LCD_RS_PORT' undeclared (first use in this function)
../hd44780.c:404: error: 'LCD_RS_PIN' undeclared (first use in this function)
../hd44780.c:446: error: 'LCD_DB7_PORT' undeclared (first use in this function)
../hd44780.c:446: error: 'LCD_DB7_PIN' undeclared (first use in this function)
../hd44780.c:447: error: 'LCD_DB6_PORT' undeclared (first use in this function)
../hd44780.c:447: error: 'LCD_DB6_PIN' undeclared (first use in this function)
../hd44780.c:448: error: 'LCD_DB5_PORT' undeclared (first use in this function)
../hd44780.c:448: error: 'LCD_DB5_PIN' undeclared (first use in this function)
../hd44780.c:449: error: 'LCD_DB4_PORT' undeclared (first use in this function)
../hd44780.c:449: error: 'LCD_DB4_PIN' undeclared (first use in this function)
../hd44780.c:450: error: 'LCD_DB3_PORT' undeclared (first use in this function)
../hd44780.c:450: error: 'LCD_DB3_PIN' undeclared (first use in this function)
../hd44780.c:451: error: 'LCD_DB2_PORT' undeclared (first use in this function)
../hd44780.c:451: error: 'LCD_DB2_PIN' undeclared (first use in this function)
../hd44780.c:452: error: 'LCD_DB1_PORT' undeclared (first use in this function)
../hd44780.c:452: error: 'LCD_DB1_PIN' undeclared (first use in this function)
../hd44780.c:453: error: 'LCD_DB0_PORT' undeclared (first use in this function)
../hd44780.c:453: error: 'LCD_DB0_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_init':
../hd44780.c:567: error: 'LCD_RS_PORT' undeclared (first use in this function)
../hd44780.c:567: error: 'LCD_RS_PIN' undeclared (first use in this function)
../hd44780.c:571: error: 'LCD_DB7_PORT' undeclared (first use in this function)
../hd44780.c:571: error: 'LCD_DB7_PIN' undeclared (first use in this function)
../hd44780.c:572: error: 'LCD_DB6_PORT' undeclared (first use in this function)
../hd44780.c:572: error: 'LCD_DB6_PIN' undeclared (first use in this function)
../hd44780.c:573: error: 'LCD_DB5_PORT' undeclared (first use in this function)
../hd44780.c:573: error: 'LCD_DB5_PIN' undeclared (first use in this function)
../hd44780.c:574: error: 'LCD_DB4_PORT' undeclared (first use in this function)
../hd44780.c:574: error: 'LCD_DB4_PIN' undeclared (first use in this function)
../hd44780.c:602: error: 'DELAY_RESET' undeclared (first use in this function)
../hd44780.c:673: error: 'ActiveDisplay' undeclared (first use in this function)
../hd44780.c:675: error: 'LCD_DISPLAY_LINES' undeclared (first use in this function)
../hd44780.c:676: error: 'LCD_DISPLAY2_LINES' undeclared (first use in this function)
../hd44780.c:685: error: 'LCD_DB3_PORT' undeclared (first use in this function)
../hd44780.c:685: error: 'LCD_DB3_PIN' undeclared (first use in this function)
../hd44780.c:688: error: 'LCD_DB2_PORT' undeclared (first use in this function)
../hd44780.c:688: error: 'LCD_DB2_PIN' undeclared (first use in this function)
make: *** [hd44780.o] Error 1
18:54:46 **** Incremental Build of configuration Release for project AlarmClock ****
make all 
Building file: ../hd44780.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"hd44780.d" -MT"hd44780.o" -c -o "hd44780.o" "../hd44780.c"
In file included from ../hd44780.c:8:
../hd44780.h:10:30: error: hd44780_settings.h: No such file or directory
../hd44780.c:32:4: error: #error LCD_BITS is not defined or not valid.
../hd44780.c:36:4: error: #error WAIT_MODE is not defined or not valid.
../hd44780.c:40:4: error: #error RW_LINE_IMPLEMENTED is not defined or not valid.
../hd44780.c:48:4: error: #error LCD_DISPLAYS is not defined or not valid.
../hd44780.c: In function 'lcd_e_port_low':
../hd44780.c:170: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:170: error: (Each undeclared identifier is reported only once
../hd44780.c:170: error: for each function it appears in.)
../hd44780.c:170: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_port_high':
../hd44780.c:193: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:193: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_ddr_low':
../hd44780.c:216: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:216: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_ddr_high':
../hd44780.c:239: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:239: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_write':
../hd44780.c:404: error: 'LCD_RS_PORT' undeclared (first use in this function)
../hd44780.c:404: error: 'LCD_RS_PIN' undeclared (first use in this function)
../hd44780.c:446: error: 'LCD_DB7_PORT' undeclared (first use in this function)
../hd44780.c:446: error: 'LCD_DB7_PIN' undeclared (first use in this function)
../hd44780.c:447: error: 'LCD_DB6_PORT' undeclared (first use in this function)
../hd44780.c:447: error: 'LCD_DB6_PIN' undeclared (first use in this function)
../hd44780.c:448: error: 'LCD_DB5_PORT' undeclared (first use in this function)
../hd44780.c:448: error: 'LCD_DB5_PIN' undeclared (first use in this function)
../hd44780.c:449: error: 'LCD_DB4_PORT' undeclared (first use in this function)
../hd44780.c:449: error: 'LCD_DB4_PIN' undeclared (first use in this function)
../hd44780.c:450: error: 'LCD_DB3_PORT' undeclared (first use in this function)
../hd44780.c:450: error: 'LCD_DB3_PIN' undeclared (first use in this function)
../hd44780.c:451: error: 'LCD_DB2_PORT' undeclared (first use in this function)
../hd44780.c:451: error: 'LCD_DB2_PIN' undeclared (first use in this function)
../hd44780.c:452: error: 'LCD_DB1_PORT' undeclared (first use in this function)
../hd44780.c:452: error: 'LCD_DB1_PIN' undeclared (first use in this function)
../hd44780.c:453: error: 'LCD_DB0_PORT' undeclared (first use in this function)
../hd44780.c:453: error: 'LCD_DB0_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_init':
../hd44780.c:567: error: 'LCD_RS_PORT' undeclared (first use in this function)
../hd44780.c:567: error: 'LCD_RS_PIN' undeclared (first use in this function)
../hd44780.c:571: error: 'LCD_DB7_PORT' undeclared (first use in this function)
../hd44780.c:571: error: 'LCD_DB7_PIN' undeclared (first use in this function)
../hd44780.c:572: error: 'LCD_DB6_PORT' undeclared (first use in this function)
../hd44780.c:572: error: 'LCD_DB6_PIN' undeclared (first use in this function)
../hd44780.c:573: error: 'LCD_DB5_PORT' undeclared (first use in this function)
../hd44780.c:573: error: 'LCD_DB5_PIN' undeclared (first use in this function)
../hd44780.c:574: error: 'LCD_DB4_PORT' undeclared (first use in this function)
../hd44780.c:574: error: 'LCD_DB4_PIN' undeclared (first use in this function)
../hd44780.c:602: error: 'DELAY_RESET' undeclared (first use in this function)
../hd44780.c:673: error: 'ActiveDisplay' undeclared (first use in this function)
../hd44780.c:675: error: 'LCD_DISPLAY_LINES' undeclared (first use in this function)
../hd44780.c:676: error: 'LCD_DISPLAY2_LINES' undeclared (first use in this function)
../hd44780.c:685: error: 'LCD_DB3_PORT' undeclared (first use in this function)
../hd44780.c:685: error: 'LCD_DB3_PIN' undeclared (first use in this function)
../hd44780.c:688: error: 'LCD_DB2_PORT' undeclared (first use in this function)
../hd44780.c:688: error: 'LCD_DB2_PIN' undeclared (first use in this function)
make: *** [hd44780.o] Error 1
18:54:47 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     238 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (238 bytes):

Writing | ################################################## | 100% 0.12s

avrdude: 238 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 238 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 238 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
18:54:49 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     184 bytes (0.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (184 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 184 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 184 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 184 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
18:54:51 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     294 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (294 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 294 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 294 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 294 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
18:54:52 **** Incremental Build of configuration Release for project Week2_1 ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Week2_1.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     290 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Evcc -Uflash:w:Week2_1.hex:a
avrdude: WARNING: -E option not supported by this programmer type

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Week2_1.hex"
avrdude: input file Week2_1.hex auto detected as Intel Hex
avrdude: writing flash (290 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 290 bytes of flash written
avrdude: verifying flash memory against Week2_1.hex:
avrdude: load data flash data from input file Week2_1.hex:
avrdude: input file Week2_1.hex auto detected as Intel Hex
avrdude: input file Week2_1.hex contains 290 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 290 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
18:54:54 **** Incremental Build of configuration Release for project WhatAreYouDoing ****
make all 
Building file: ../main.c
Invoking: Cross GCC Compiler
avr-gcc -O3 -Wall -c -fmessage-length=0 -MMD -MP -MF"main.d" -MT"main.o" -o "main.o" "../main.c"
In file included from ../main.c:8:
c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h:85:3: warning: #warning "F_CPU not defined for <util/delay.h>"
../main.c: In function 'main':
../main.c:16: error: expected ';' before ':' token
make: *** [main.o] Error 1
19:02:33 **** Incremental Build of configuration Release for project AlarmClock ****
make all 
Building file: ../hd44780.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"hd44780.d" -MT"hd44780.o" -c -o "hd44780.o" "../hd44780.c"
In file included from ../hd44780.c:8:
../hd44780.h:10:30: error: hd44780_settings.h: No such file or directory
../hd44780.c:32:4: error: #error LCD_BITS is not defined or not valid.
../hd44780.c:36:4: error: #error WAIT_MODE is not defined or not valid.
../hd44780.c:40:4: error: #error RW_LINE_IMPLEMENTED is not defined or not valid.
../hd44780.c:48:4: error: #error LCD_DISPLAYS is not defined or not valid.
../hd44780.c: In function 'lcd_e_port_low':
../hd44780.c:170: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:170: error: (Each undeclared identifier is reported only once
../hd44780.c:170: error: for each function it appears in.)
../hd44780.c:170: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_port_high':
../hd44780.c:193: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:193: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_ddr_low':
../hd44780.c:216: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:216: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_ddr_high':
../hd44780.c:239: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:239: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_write':
../hd44780.c:404: error: 'LCD_RS_PORT' undeclared (first use in this function)
../hd44780.c:404: error: 'LCD_RS_PIN' undeclared (first use in this function)
../hd44780.c:446: error: 'LCD_DB7_PORT' undeclared (first use in this function)
../hd44780.c:446: error: 'LCD_DB7_PIN' undeclared (first use in this function)
../hd44780.c:447: error: 'LCD_DB6_PORT' undeclared (first use in this function)
../hd44780.c:447: error: 'LCD_DB6_PIN' undeclared (first use in this function)
../hd44780.c:448: error: 'LCD_DB5_PORT' undeclared (first use in this function)
../hd44780.c:448: error: 'LCD_DB5_PIN' undeclared (first use in this function)
../hd44780.c:449: error: 'LCD_DB4_PORT' undeclared (first use in this function)
../hd44780.c:449: error: 'LCD_DB4_PIN' undeclared (first use in this function)
../hd44780.c:450: error: 'LCD_DB3_PORT' undeclared (first use in this function)
../hd44780.c:450: error: 'LCD_DB3_PIN' undeclared (first use in this function)
../hd44780.c:451: error: 'LCD_DB2_PORT' undeclared (first use in this function)
../hd44780.c:451: error: 'LCD_DB2_PIN' undeclared (first use in this function)
../hd44780.c:452: error: 'LCD_DB1_PORT' undeclared (first use in this function)
../hd44780.c:452: error: 'LCD_DB1_PIN' undeclared (first use in this function)
../hd44780.c:453: error: 'LCD_DB0_PORT' undeclared (first use in this function)
../hd44780.c:453: error: 'LCD_DB0_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_init':
../hd44780.c:567: error: 'LCD_RS_PORT' undeclared (first use in this function)
../hd44780.c:567: error: 'LCD_RS_PIN' undeclared (first use in this function)
../hd44780.c:571: error: 'LCD_DB7_PORT' undeclared (first use in this function)
../hd44780.c:571: error: 'LCD_DB7_PIN' undeclared (first use in this function)
../hd44780.c:572: error: 'LCD_DB6_PORT' undeclared (first use in this function)
../hd44780.c:572: error: 'LCD_DB6_PIN' undeclared (first use in this function)
../hd44780.c:573: error: 'LCD_DB5_PORT' undeclared (first use in this function)
../hd44780.c:573: error: 'LCD_DB5_PIN' undeclared (first use in this function)
../hd44780.c:574: error: 'LCD_DB4_PORT' undeclared (first use in this function)
../hd44780.c:574: error: 'LCD_DB4_PIN' undeclared (first use in this function)
../hd44780.c:602: error: 'DELAY_RESET' undeclared (first use in this function)
../hd44780.c:673: error: 'ActiveDisplay' undeclared (first use in this function)
../hd44780.c:675: error: 'LCD_DISPLAY_LINES' undeclared (first use in this function)
../hd44780.c:676: error: 'LCD_DISPLAY2_LINES' undeclared (first use in this function)
../hd44780.c:685: error: 'LCD_DB3_PORT' undeclared (first use in this function)
../hd44780.c:685: error: 'LCD_DB3_PIN' undeclared (first use in this function)
../hd44780.c:688: error: 'LCD_DB2_PORT' undeclared (first use in this function)
../hd44780.c:688: error: 'LCD_DB2_PIN' undeclared (first use in this function)
make: *** [hd44780.o] Error 1
19:02:44 **** Incremental Build of configuration Release for project AlarmClock ****
make all 
Building file: ../hd44780.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"hd44780.d" -MT"hd44780.o" -c -o "hd44780.o" "../hd44780.c"
In file included from ../hd44780.c:8:
../hd44780.h:10:30: error: hd44780_settings.h: No such file or directory
../hd44780.c:32:4: error: #error LCD_BITS is not defined or not valid.
../hd44780.c:36:4: error: #error WAIT_MODE is not defined or not valid.
../hd44780.c:40:4: error: #error RW_LINE_IMPLEMENTED is not defined or not valid.
../hd44780.c:48:4: error: #error LCD_DISPLAYS is not defined or not valid.
../hd44780.c: In function 'lcd_e_port_low':
../hd44780.c:170: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:170: error: (Each undeclared identifier is reported only once
../hd44780.c:170: error: for each function it appears in.)
../hd44780.c:170: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_port_high':
../hd44780.c:193: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:193: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_ddr_low':
../hd44780.c:216: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:216: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_ddr_high':
../hd44780.c:239: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:239: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_write':
../hd44780.c:404: error: 'LCD_RS_PORT' undeclared (first use in this function)
../hd44780.c:404: error: 'LCD_RS_PIN' undeclared (first use in this function)
../hd44780.c:446: error: 'LCD_DB7_PORT' undeclared (first use in this function)
../hd44780.c:446: error: 'LCD_DB7_PIN' undeclared (first use in this function)
../hd44780.c:447: error: 'LCD_DB6_PORT' undeclared (first use in this function)
../hd44780.c:447: error: 'LCD_DB6_PIN' undeclared (first use in this function)
../hd44780.c:448: error: 'LCD_DB5_PORT' undeclared (first use in this function)
../hd44780.c:448: error: 'LCD_DB5_PIN' undeclared (first use in this function)
../hd44780.c:449: error: 'LCD_DB4_PORT' undeclared (first use in this function)
../hd44780.c:449: error: 'LCD_DB4_PIN' undeclared (first use in this function)
../hd44780.c:450: error: 'LCD_DB3_PORT' undeclared (first use in this function)
../hd44780.c:450: error: 'LCD_DB3_PIN' undeclared (first use in this function)
../hd44780.c:451: error: 'LCD_DB2_PORT' undeclared (first use in this function)
../hd44780.c:451: error: 'LCD_DB2_PIN' undeclared (first use in this function)
../hd44780.c:452: error: 'LCD_DB1_PORT' undeclared (first use in this function)
../hd44780.c:452: error: 'LCD_DB1_PIN' undeclared (first use in this function)
../hd44780.c:453: error: 'LCD_DB0_PORT' undeclared (first use in this function)
../hd44780.c:453: error: 'LCD_DB0_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_init':
../hd44780.c:567: error: 'LCD_RS_PORT' undeclared (first use in this function)
../hd44780.c:567: error: 'LCD_RS_PIN' undeclared (first use in this function)
../hd44780.c:571: error: 'LCD_DB7_PORT' undeclared (first use in this function)
../hd44780.c:571: error: 'LCD_DB7_PIN' undeclared (first use in this function)
../hd44780.c:572: error: 'LCD_DB6_PORT' undeclared (first use in this function)
../hd44780.c:572: error: 'LCD_DB6_PIN' undeclared (first use in this function)
../hd44780.c:573: error: 'LCD_DB5_PORT' undeclared (first use in this function)
../hd44780.c:573: error: 'LCD_DB5_PIN' undeclared (first use in this function)
../hd44780.c:574: error: 'LCD_DB4_PORT' undeclared (first use in this function)
../hd44780.c:574: error: 'LCD_DB4_PIN' undeclared (first use in this function)
../hd44780.c:602: error: 'DELAY_RESET' undeclared (first use in this function)
../hd44780.c:673: error: 'ActiveDisplay' undeclared (first use in this function)
../hd44780.c:675: error: 'LCD_DISPLAY_LINES' undeclared (first use in this function)
../hd44780.c:676: error: 'LCD_DISPLAY2_LINES' undeclared (first use in this function)
../hd44780.c:685: error: 'LCD_DB3_PORT' undeclared (first use in this function)
../hd44780.c:685: error: 'LCD_DB3_PIN' undeclared (first use in this function)
../hd44780.c:688: error: 'LCD_DB2_PORT' undeclared (first use in this function)
../hd44780.c:688: error: 'LCD_DB2_PIN' undeclared (first use in this function)
make: *** [hd44780.o] Error 1
19:02:45 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     238 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (238 bytes):

Writing | ################################################## | 100% 0.12s

avrdude: 238 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 238 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 238 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
19:02:46 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     184 bytes (0.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (184 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 184 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 184 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 184 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
19:02:48 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     294 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (294 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 294 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 294 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 294 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
19:02:49 **** Incremental Build of configuration Release for project Week2_1 ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Week2_1.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     290 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Evcc -Uflash:w:Week2_1.hex:a
avrdude: WARNING: -E option not supported by this programmer type

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Week2_1.hex"
avrdude: input file Week2_1.hex auto detected as Intel Hex
avrdude: writing flash (290 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 290 bytes of flash written
avrdude: verifying flash memory against Week2_1.hex:
avrdude: load data flash data from input file Week2_1.hex:
avrdude: input file Week2_1.hex auto detected as Intel Hex
avrdude: input file Week2_1.hex contains 290 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 290 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
19:02:50 **** Incremental Build of configuration Release for project WhatAreYouDoing ****
make all 
Building file: ../main.c
Invoking: Cross GCC Compiler
avr-gcc -O3 -Wall -c -fmessage-length=0 -MMD -MP -MF"main.d" -MT"main.o" -o "main.o" "../main.c"
In file included from ../main.c:8:
c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h:85:3: warning: #warning "F_CPU not defined for <util/delay.h>"
../main.c: In function 'main':
../main.c:16: error: expected ';' before ':' token
make: *** [main.o] Error 1
19:02:53 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     238 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (238 bytes):

Writing | ################################################## | 100% 0.13s

avrdude: 238 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 238 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 238 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
09:10:42 **** Build of configuration Release for project DrukLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     184 bytes (0.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (184 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 184 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 184 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 184 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
09:11:05 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     150 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (150 bytes):

Writing | ################################################## | 100% 0.08s

avrdude: 150 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 150 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.04s

avrdude: verifying ...
avrdude: 150 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
09:14:30 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     152 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (152 bytes):

Writing | ################################################## | 100% 0.08s

avrdude: 152 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 152 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.04s

avrdude: verifying ...
avrdude: 152 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:14:36 **** Build of configuration Release for project Woewhoewhoe ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:12:24: error: pinDefines.h: No such file or directory
../main.c: In function 'readADC':
../main.c:108: warning: no return statement in function returning non-void
../main.c: At top level:
../main.c:110: error: expected identifier or '(' before 'do'
../main.c:110: error: expected identifier or '(' before 'while'
../main.c:111: error: expected identifier or '(' before 'return'
../main.c:112: error: expected identifier or '(' before '}' token
make: *** [main.o] Error 1
10:15:13 **** Incremental Build of configuration Release for project Woewhoewhoe ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:12:24: error: pinDefines.h: No such file or directory
../main.c: In function 'readADC':
../main.c:109: warning: no return statement in function returning non-void
../main.c: At top level:
../main.c:111: error: expected identifier or '(' before 'do'
../main.c:111: error: expected identifier or '(' before 'while'
../main.c:112: error: expected identifier or '(' before 'return'
../main.c:113: error: expected identifier or '(' before '}' token
make: *** [main.o] Error 1
10:19:31 **** Incremental Build of configuration Release for project Woewhoewhoe ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Woewhoewhoe.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Woewhoewhoe.map -mmcu=atmega328 -o "Woewhoewhoe.elf"  ./main.o   
Finished building target: Woewhoewhoe.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Woewhoewhoe.elf  "Woewhoewhoe.hex"
Finished building: Woewhoewhoe.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Woewhoewhoe.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     246 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:Woewhoewhoe.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Woewhoewhoe.hex"
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: writing flash (246 bytes):

Writing | ################################################## | 100% 0.13s

avrdude: 246 bytes of flash written
avrdude: verifying flash memory against Woewhoewhoe.hex:
avrdude: load data flash data from input file Woewhoewhoe.hex:
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: input file Woewhoewhoe.hex contains 246 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 246 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:56:55 **** Incremental Build of configuration Release for project Woewhoewhoe ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Woewhoewhoe.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Woewhoewhoe.map -mmcu=atmega328 -o "Woewhoewhoe.elf"  ./main.o   
Finished building target: Woewhoewhoe.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Woewhoewhoe.elf  "Woewhoewhoe.hex"
Finished building: Woewhoewhoe.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Woewhoewhoe.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     368 bytes (1.1% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:Woewhoewhoe.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Woewhoewhoe.hex"
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: writing flash (368 bytes):

Writing | ################################################## | 100% 0.19s

avrdude: 368 bytes of flash written
avrdude: verifying flash memory against Woewhoewhoe.hex:
avrdude: load data flash data from input file Woewhoewhoe.hex:
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: input file Woewhoewhoe.hex contains 368 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.11s

avrdude: verifying ...
avrdude: 368 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:09:54 **** Incremental Build of configuration Release for project Woewhoewhoe ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Woewhoewhoe.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     368 bytes (1.1% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:Woewhoewhoe.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Woewhoewhoe.hex"
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: writing flash (368 bytes):

Writing | ################################################## | 100% 0.19s

avrdude: 368 bytes of flash written
avrdude: verifying flash memory against Woewhoewhoe.hex:
avrdude: load data flash data from input file Woewhoewhoe.hex:
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: input file Woewhoewhoe.hex contains 368 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.11s

avrdude: verifying ...
avrdude: 368 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:10:11 **** Incremental Build of configuration Release for project Woewhoewhoe ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Woewhoewhoe.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Woewhoewhoe.map -mmcu=atmega328 -o "Woewhoewhoe.elf"  ./main.o   
Finished building target: Woewhoewhoe.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Woewhoewhoe.elf  "Woewhoewhoe.hex"
Finished building: Woewhoewhoe.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Woewhoewhoe.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     300 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:Woewhoewhoe.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Woewhoewhoe.hex"
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: writing flash (300 bytes):

Writing | ################################################## | 100% 0.16s

avrdude: 300 bytes of flash written
avrdude: verifying flash memory against Woewhoewhoe.hex:
avrdude: load data flash data from input file Woewhoewhoe.hex:
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: input file Woewhoewhoe.hex contains 300 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.09s

avrdude: verifying ...
avrdude: 300 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:12:10 **** Incremental Build of configuration Release for project Woewhoewhoe ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Woewhoewhoe.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Woewhoewhoe.map -mmcu=atmega328 -o "Woewhoewhoe.elf"  ./main.o   
Finished building target: Woewhoewhoe.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Woewhoewhoe.elf  "Woewhoewhoe.hex"
Finished building: Woewhoewhoe.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Woewhoewhoe.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     336 bytes (1.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:Woewhoewhoe.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Woewhoewhoe.hex"
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: writing flash (336 bytes):

Writing | ################################################## | 100% 0.18s

avrdude: 336 bytes of flash written
avrdude: verifying flash memory against Woewhoewhoe.hex:
avrdude: load data flash data from input file Woewhoewhoe.hex:
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: input file Woewhoewhoe.hex contains 336 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.10s

avrdude: verifying ...
avrdude: 336 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:12:32 **** Incremental Build of configuration Release for project Woewhoewhoe ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Woewhoewhoe.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Woewhoewhoe.map -mmcu=atmega328 -o "Woewhoewhoe.elf"  ./main.o   
Finished building target: Woewhoewhoe.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Woewhoewhoe.elf  "Woewhoewhoe.hex"
Finished building: Woewhoewhoe.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Woewhoewhoe.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     336 bytes (1.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:Woewhoewhoe.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Woewhoewhoe.hex"
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: writing flash (336 bytes):

Writing | ################################################## | 100% 0.18s

avrdude: 336 bytes of flash written
avrdude: verifying flash memory against Woewhoewhoe.hex:
avrdude: load data flash data from input file Woewhoewhoe.hex:
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: input file Woewhoewhoe.hex contains 336 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.10s

avrdude: verifying ...
avrdude: 336 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:04:26 **** Incremental Build of configuration Release for project Woewhoewhoe ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Woewhoewhoe.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Woewhoewhoe.map -mmcu=atmega328 -o "Woewhoewhoe.elf"  ./main.o   
Finished building target: Woewhoewhoe.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Woewhoewhoe.elf  "Woewhoewhoe.hex"
Finished building: Woewhoewhoe.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Woewhoewhoe.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     350 bytes (1.1% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:Woewhoewhoe.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Woewhoewhoe.hex"
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: writing flash (350 bytes):

Writing | ################################################## | 100% 0.18s

avrdude: 350 bytes of flash written
avrdude: verifying flash memory against Woewhoewhoe.hex:
avrdude: load data flash data from input file Woewhoewhoe.hex:
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: input file Woewhoewhoe.hex contains 350 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.10s

avrdude: verifying ...
avrdude: 350 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:05:28 **** Incremental Build of configuration Release for project Woewhoewhoe ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Woewhoewhoe.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Woewhoewhoe.map -mmcu=atmega328 -o "Woewhoewhoe.elf"  ./main.o   
Finished building target: Woewhoewhoe.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Woewhoewhoe.elf  "Woewhoewhoe.hex"
Finished building: Woewhoewhoe.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Woewhoewhoe.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     350 bytes (1.1% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:Woewhoewhoe.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Woewhoewhoe.hex"
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: writing flash (350 bytes):

Writing | ################################################## | 100% 0.18s

avrdude: 350 bytes of flash written
avrdude: verifying flash memory against Woewhoewhoe.hex:
avrdude: load data flash data from input file Woewhoewhoe.hex:
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: input file Woewhoewhoe.hex contains 350 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.10s

avrdude: verifying ...
avrdude: 350 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:05:55 **** Incremental Build of configuration Release for project Woewhoewhoe ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: Woewhoewhoe.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Woewhoewhoe.map -mmcu=atmega328 -o "Woewhoewhoe.elf"  ./main.o   
Finished building target: Woewhoewhoe.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Woewhoewhoe.elf  "Woewhoewhoe.hex"
Finished building: Woewhoewhoe.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Woewhoewhoe.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     336 bytes (1.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:Woewhoewhoe.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Woewhoewhoe.hex"
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: writing flash (336 bytes):

Writing | ################################################## | 100% 0.17s

avrdude: 336 bytes of flash written
avrdude: verifying flash memory against Woewhoewhoe.hex:
avrdude: load data flash data from input file Woewhoewhoe.hex:
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: input file Woewhoewhoe.hex contains 336 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.10s

avrdude: verifying ...
avrdude: 336 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:13:07 **** Build of configuration Release for project SimonZegt ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega16 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:18: warning: unused variable 'toggle'
Finished building: ../main.c
 
Building target: SimonZegt.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SimonZegt.map -mmcu=atmega16 -o "SimonZegt.elf"  ./main.o   
Finished building target: SimonZegt.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S SimonZegt.elf  >"SimonZegt.lss"
Finished building: SimonZegt.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SimonZegt.elf  "SimonZegt.hex"
Finished building: SimonZegt.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex SimonZegt.elf  "SimonZegt.eep"
Finished building: SimonZegt.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega16 SimonZegt.elf
AVR Memory Usage
----------------
Device: atmega16

Program:     120 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:13:37 **** Incremental Build of configuration Release for project SimonZegt ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega16 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:18: warning: unused variable 'toggle'
Finished building: ../main.c
 
Building target: SimonZegt.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SimonZegt.map -mmcu=atmega16 -o "SimonZegt.elf"  ./main.o   
Finished building target: SimonZegt.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S SimonZegt.elf  >"SimonZegt.lss"
Finished building: SimonZegt.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SimonZegt.elf  "SimonZegt.hex"
Finished building: SimonZegt.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex SimonZegt.elf  "SimonZegt.eep"
Finished building: SimonZegt.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega16 SimonZegt.elf
AVR Memory Usage
----------------
Device: atmega16

Program:     126 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:18:04 **** Incremental Build of configuration Release for project SimonZegt ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega16 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:18: warning: unused variable 'toggle'
Finished building: ../main.c
 
Building target: SimonZegt.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SimonZegt.map -mmcu=atmega16 -o "SimonZegt.elf"  ./main.o   
Finished building target: SimonZegt.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S SimonZegt.elf  >"SimonZegt.lss"
Finished building: SimonZegt.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SimonZegt.elf  "SimonZegt.hex"
Finished building: SimonZegt.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex SimonZegt.elf  "SimonZegt.eep"
Finished building: SimonZegt.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega16 SimonZegt.elf
AVR Memory Usage
----------------
Device: atmega16

Program:     126 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:19:21 **** Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:18: warning: unused variable 'toggle'
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     140 bytes (0.4% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (140 bytes):

Writing | ################################################## | 100% 0.08s

avrdude: 140 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 140 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.04s

avrdude: verifying ...
avrdude: 140 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:20:28 **** Build of configuration Release for project BlinkLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     238 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (238 bytes):

Writing | ################################################## | 100% 0.12s

avrdude: 238 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 238 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 238 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:21:18 **** Incremental Build of configuration Release for project SimonZegt ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega16 SimonZegt.elf
AVR Memory Usage
----------------
Device: atmega16

Program:     126 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:21:27 **** Incremental Build of configuration Release for project SimonZegt ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega16 SimonZegt.elf
AVR Memory Usage
----------------
Device: atmega16

Program:     126 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:21:35 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     140 bytes (0.4% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (140 bytes):

Writing | ################################################## | 100% 0.08s

avrdude: 140 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 140 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.03s

avrdude: verifying ...
avrdude: 140 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:22:01 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:18: warning: unused variable 'toggle'
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     152 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (152 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 152 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 152 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.03s

avrdude: verifying ...
avrdude: 152 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:23:39 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:18: warning: unused variable 'toggle'
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     140 bytes (0.4% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (140 bytes):

Writing | ################################################## | 100% 0.07s

avrdude: 140 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 140 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 140 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:24:25 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     238 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (238 bytes):

Writing | ################################################## | 100% 0.12s

avrdude: 238 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 238 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 238 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:24:42 **** Incremental Build of configuration Release for project SimonZegt ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega16 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SimonZegt.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SimonZegt.map -mmcu=atmega16 -o "SimonZegt.elf"  ./main.o   
Finished building target: SimonZegt.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S SimonZegt.elf  >"SimonZegt.lss"
Finished building: SimonZegt.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SimonZegt.elf  "SimonZegt.hex"
Finished building: SimonZegt.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex SimonZegt.elf  "SimonZegt.eep"
Finished building: SimonZegt.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega16 SimonZegt.elf
AVR Memory Usage
----------------
Device: atmega16

Program:     132 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:25:29 **** Build of configuration Release for project AlarmClock ****
make all 
Building file: ../hd44780.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"hd44780.d" -MT"hd44780.o" -c -o "hd44780.o" "../hd44780.c"
In file included from ../hd44780.c:8:
../hd44780.h:10:30: error: hd44780_settings.h: No such file or directory
../hd44780.c:32:4: error: #error LCD_BITS is not defined or not valid.
../hd44780.c:36:4: error: #error WAIT_MODE is not defined or not valid.
../hd44780.c:40:4: error: #error RW_LINE_IMPLEMENTED is not defined or not valid.
../hd44780.c:48:4: error: #error LCD_DISPLAYS is not defined or not valid.
../hd44780.c: In function 'lcd_e_port_low':
../hd44780.c:170: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:170: error: (Each undeclared identifier is reported only once
../hd44780.c:170: error: for each function it appears in.)
../hd44780.c:170: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_port_high':
../hd44780.c:193: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:193: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_ddr_low':
../hd44780.c:216: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:216: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_ddr_high':
../hd44780.c:239: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:239: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_write':
../hd44780.c:404: error: 'LCD_RS_PORT' undeclared (first use in this function)
../hd44780.c:404: error: 'LCD_RS_PIN' undeclared (first use in this function)
../hd44780.c:446: error: 'LCD_DB7_PORT' undeclared (first use in this function)
../hd44780.c:446: error: 'LCD_DB7_PIN' undeclared (first use in this function)
../hd44780.c:447: error: 'LCD_DB6_PORT' undeclared (first use in this function)
../hd44780.c:447: error: 'LCD_DB6_PIN' undeclared (first use in this function)
../hd44780.c:448: error: 'LCD_DB5_PORT' undeclared (first use in this function)
../hd44780.c:448: error: 'LCD_DB5_PIN' undeclared (first use in this function)
../hd44780.c:449: error: 'LCD_DB4_PORT' undeclared (first use in this function)
../hd44780.c:449: error: 'LCD_DB4_PIN' undeclared (first use in this function)
../hd44780.c:450: error: 'LCD_DB3_PORT' undeclared (first use in this function)
../hd44780.c:450: error: 'LCD_DB3_PIN' undeclared (first use in this function)
../hd44780.c:451: error: 'LCD_DB2_PORT' undeclared (first use in this function)
../hd44780.c:451: error: 'LCD_DB2_PIN' undeclared (first use in this function)
../hd44780.c:452: error: 'LCD_DB1_PORT' undeclared (first use in this function)
../hd44780.c:452: error: 'LCD_DB1_PIN' undeclared (first use in this function)
../hd44780.c:453: error: 'LCD_DB0_PORT' undeclared (first use in this function)
../hd44780.c:453: error: 'LCD_DB0_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_init':
../hd44780.c:567: error: 'LCD_RS_PORT' undeclared (first use in this function)
../hd44780.c:567: error: 'LCD_RS_PIN' undeclared (first use in this function)
../hd44780.c:571: error: 'LCD_DB7_PORT' undeclared (first use in this function)
../hd44780.c:571: error: 'LCD_DB7_PIN' undeclared (first use in this function)
../hd44780.c:572: error: 'LCD_DB6_PORT' undeclared (first use in this function)
../hd44780.c:572: error: 'LCD_DB6_PIN' undeclared (first use in this function)
../hd44780.c:573: error: 'LCD_DB5_PORT' undeclared (first use in this function)
../hd44780.c:573: error: 'LCD_DB5_PIN' undeclared (first use in this function)
../hd44780.c:574: error: 'LCD_DB4_PORT' undeclared (first use in this function)
../hd44780.c:574: error: 'LCD_DB4_PIN' undeclared (first use in this function)
../hd44780.c:602: error: 'DELAY_RESET' undeclared (first use in this function)
../hd44780.c:673: error: 'ActiveDisplay' undeclared (first use in this function)
../hd44780.c:675: error: 'LCD_DISPLAY_LINES' undeclared (first use in this function)
../hd44780.c:676: error: 'LCD_DISPLAY2_LINES' undeclared (first use in this function)
../hd44780.c:685: error: 'LCD_DB3_PORT' undeclared (first use in this function)
../hd44780.c:685: error: 'LCD_DB3_PIN' undeclared (first use in this function)
../hd44780.c:688: error: 'LCD_DB2_PORT' undeclared (first use in this function)
../hd44780.c:688: error: 'LCD_DB2_PIN' undeclared (first use in this function)
make: *** [hd44780.o] Error 1
10:25:30 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     238 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (238 bytes):

Writing | ################################################## | 100% 0.13s

avrdude: 238 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 238 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 238 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:25:31 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     140 bytes (0.4% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (140 bytes):

Writing | ################################################## | 100% 0.08s

avrdude: 140 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 140 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.04s

avrdude: verifying ...
avrdude: 140 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:25:32 **** Build of configuration Release for project SevenSegmentDisplay ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     294 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (294 bytes):

Writing | ################################################## | 100% 0.16s

avrdude: 294 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 294 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 294 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:25:34 **** Incremental Build of configuration Release for project SimonZegt ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega16 SimonZegt.elf
AVR Memory Usage
----------------
Device: atmega16

Program:     132 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:25:35 **** Build of configuration Release for project Week2_1 ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Week2_1.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     290 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Evcc -Uflash:w:Week2_1.hex:a
avrdude: WARNING: -E option not supported by this programmer type

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Week2_1.hex"
avrdude: input file Week2_1.hex auto detected as Intel Hex
avrdude: writing flash (290 bytes):

Writing | ################################################## | 100% 0.17s

avrdude: 290 bytes of flash written
avrdude: verifying flash memory against Week2_1.hex:
avrdude: load data flash data from input file Week2_1.hex:
avrdude: input file Week2_1.hex auto detected as Intel Hex
avrdude: input file Week2_1.hex contains 290 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 290 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:25:36 **** Build of configuration Release for project WhatAreYouDoing ****
make all 
Building file: ../main.c
Invoking: Cross GCC Compiler
avr-gcc -O3 -Wall -c -fmessage-length=0 -MMD -MP -MF"main.d" -MT"main.o" -o "main.o" "../main.c"
In file included from ../main.c:8:
c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h:85:3: warning: #warning "F_CPU not defined for <util/delay.h>"
../main.c: In function 'main':
../main.c:16: error: expected ';' before ':' token
make: *** [main.o] Error 1
10:25:37 **** Build of configuration Release for project Woewhoewhoe ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Woewhoewhoe.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     336 bytes (1.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:Woewhoewhoe.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Woewhoewhoe.hex"
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: writing flash (336 bytes):

Writing | ################################################## | 100% 0.18s

avrdude: 336 bytes of flash written
avrdude: verifying flash memory against Woewhoewhoe.hex:
avrdude: load data flash data from input file Woewhoewhoe.hex:
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: input file Woewhoewhoe.hex contains 336 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.09s

avrdude: verifying ...
avrdude: 336 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:26:02 **** Incremental Build of configuration Release for project SimonZegt ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega16 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SimonZegt.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SimonZegt.map -mmcu=atmega16 -o "SimonZegt.elf"  ./main.o   
Finished building target: SimonZegt.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S SimonZegt.elf  >"SimonZegt.lss"
Finished building: SimonZegt.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SimonZegt.elf  "SimonZegt.hex"
Finished building: SimonZegt.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex SimonZegt.elf  "SimonZegt.eep"
Finished building: SimonZegt.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega16 SimonZegt.elf
AVR Memory Usage
----------------
Device: atmega16

Program:     132 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:26:13 **** Incremental Build of configuration Release for project SimonZegt ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega16 SimonZegt.elf
AVR Memory Usage
----------------
Device: atmega16

Program:     132 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:26:36 **** Incremental Build of configuration Release for project SimonZegt ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega16 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SimonZegt.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SimonZegt.map -mmcu=atmega16 -o "SimonZegt.elf"  ./main.o   
Finished building target: SimonZegt.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S SimonZegt.elf  >"SimonZegt.lss"
Finished building: SimonZegt.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SimonZegt.elf  "SimonZegt.hex"
Finished building: SimonZegt.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex SimonZegt.elf  "SimonZegt.eep"
Finished building: SimonZegt.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega16 SimonZegt.elf
AVR Memory Usage
----------------
Device: atmega16

Program:     132 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:27:28 **** Incremental Build of configuration Release for project SimonZegt ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega16 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SimonZegt.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SimonZegt.map -mmcu=atmega16 -o "SimonZegt.elf"  ./main.o   
Finished building target: SimonZegt.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S SimonZegt.elf  >"SimonZegt.lss"
Finished building: SimonZegt.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SimonZegt.elf  "SimonZegt.hex"
Finished building: SimonZegt.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex SimonZegt.elf  "SimonZegt.eep"
Finished building: SimonZegt.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega16 SimonZegt.elf
AVR Memory Usage
----------------
Device: atmega16

Program:     134 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:27:40 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     238 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.02s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (238 bytes):

Writing | ################################################## | 100% 0.12s

avrdude: 238 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 238 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 238 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:27:58 **** Incremental Build of configuration Release for project Woewhoewhoe ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Woewhoewhoe.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     336 bytes (1.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:Woewhoewhoe.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Woewhoewhoe.hex"
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: writing flash (336 bytes):

Writing | ################################################## | 100% 0.17s

avrdude: 336 bytes of flash written
avrdude: verifying flash memory against Woewhoewhoe.hex:
avrdude: load data flash data from input file Woewhoewhoe.hex:
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: input file Woewhoewhoe.hex contains 336 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.09s

avrdude: verifying ...
avrdude: 336 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:29:08 **** Incremental Build of configuration Release for project SimonZegt ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega16 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SimonZegt.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SimonZegt.map -mmcu=atmega16 -o "SimonZegt.elf"  ./main.o   
Finished building target: SimonZegt.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S SimonZegt.elf  >"SimonZegt.lss"
Finished building: SimonZegt.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SimonZegt.elf  "SimonZegt.hex"
Finished building: SimonZegt.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex SimonZegt.elf  "SimonZegt.eep"
Finished building: SimonZegt.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega16 SimonZegt.elf
AVR Memory Usage
----------------
Device: atmega16

Program:     128 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:29:50 **** Incremental Build of configuration Release for project SimonZegt ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega16 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SimonZegt.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SimonZegt.map -mmcu=atmega16 -o "SimonZegt.elf"  ./main.o   
Finished building target: SimonZegt.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S SimonZegt.elf  >"SimonZegt.lss"
Finished building: SimonZegt.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SimonZegt.elf  "SimonZegt.hex"
Finished building: SimonZegt.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex SimonZegt.elf  "SimonZegt.eep"
Finished building: SimonZegt.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega16 SimonZegt.elf
AVR Memory Usage
----------------
Device: atmega16

Program:     154 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:31:28 **** Incremental Build of configuration Release for project SimonZegt ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega16 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: SimonZegt.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,SimonZegt.map -mmcu=atmega16 -o "SimonZegt.elf"  ./main.o   
Finished building target: SimonZegt.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S SimonZegt.elf  >"SimonZegt.lss"
Finished building: SimonZegt.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex SimonZegt.elf  "SimonZegt.hex"
Finished building: SimonZegt.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex SimonZegt.elf  "SimonZegt.eep"
Finished building: SimonZegt.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega16 SimonZegt.elf
AVR Memory Usage
----------------
Device: atmega16

Program:     156 bytes (1.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:32:16 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     238 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.02s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (238 bytes):

Writing | ################################################## | 100% 0.12s

avrdude: 238 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 238 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 238 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:33:58 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     260 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.02s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (260 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 260 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 260 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 260 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:34:11 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     196 bytes (0.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.02s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (196 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 196 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 196 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 196 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:34:35 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function 'zetLedAan':
../main.c:28: error: expected ';' before '}' token
make: *** [main.o] Error 1
10:34:44 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     260 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (260 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 260 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 260 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 260 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:35:09 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     242 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (242 bytes):

Writing | ################################################## | 100% 0.13s

avrdude: 242 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 242 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 242 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:35:19 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     244 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (244 bytes):

Writing | ################################################## | 100% 0.13s

avrdude: 244 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 244 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 244 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:35:51 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     260 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (260 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 260 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 260 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.06s

avrdude: verifying ...
avrdude: 260 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:36:22 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     258 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (258 bytes):

Writing | ################################################## | 100% 0.14s

avrdude: 258 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 258 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 258 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:36:46 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     260 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.02s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (260 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 260 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 260 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.06s

avrdude: verifying ...
avrdude: 260 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:38:50 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     266 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.02s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (266 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 266 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 266 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 266 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:39:22 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     264 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (264 bytes):

Writing | ################################################## | 100% 0.14s

avrdude: 264 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 264 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.09s

avrdude: verifying ...
avrdude: 264 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:40:13 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     264 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.02s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (264 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 264 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 264 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 264 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:40:32 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     244 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (244 bytes):

Writing | ################################################## | 100% 0.13s

avrdude: 244 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 244 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 244 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:40:53 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     260 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (260 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 260 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 260 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.06s

avrdude: verifying ...
avrdude: 260 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:41:04 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     260 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (260 bytes):

Writing | ################################################## | 100% 0.16s

avrdude: 260 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 260 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 260 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:42:21 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     260 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.02s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (260 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 260 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 260 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 260 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:42:32 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     244 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (244 bytes):

Writing | ################################################## | 100% 0.13s

avrdude: 244 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 244 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 244 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:43:06 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     244 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (244 bytes):

Writing | ################################################## | 100% 0.14s

avrdude: 244 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 244 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 244 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:43:42 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     264 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (264 bytes):

Writing | ################################################## | 100% 0.16s

avrdude: 264 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 264 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 264 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
10:46:25 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     268 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (268 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 268 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 268 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 268 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:08:19 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     268 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (268 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 268 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 268 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 268 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:09:41 **** Incremental Build of configuration Release for project AlarmClock ****
make all 
Building file: ../hd44780.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"hd44780.d" -MT"hd44780.o" -c -o "hd44780.o" "../hd44780.c"
In file included from ../hd44780.c:8:
../hd44780.h:10:30: error: hd44780_settings.h: No such file or directory
../hd44780.c:32:4: error: #error LCD_BITS is not defined or not valid.
../hd44780.c:36:4: error: #error WAIT_MODE is not defined or not valid.
../hd44780.c:40:4: error: #error RW_LINE_IMPLEMENTED is not defined or not valid.
../hd44780.c:48:4: error: #error LCD_DISPLAYS is not defined or not valid.
../hd44780.c: In function 'lcd_e_port_low':
../hd44780.c:170: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:170: error: (Each undeclared identifier is reported only once
../hd44780.c:170: error: for each function it appears in.)
../hd44780.c:170: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_port_high':
../hd44780.c:193: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:193: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_ddr_low':
../hd44780.c:216: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:216: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_ddr_high':
../hd44780.c:239: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:239: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_write':
../hd44780.c:404: error: 'LCD_RS_PORT' undeclared (first use in this function)
../hd44780.c:404: error: 'LCD_RS_PIN' undeclared (first use in this function)
../hd44780.c:446: error: 'LCD_DB7_PORT' undeclared (first use in this function)
../hd44780.c:446: error: 'LCD_DB7_PIN' undeclared (first use in this function)
../hd44780.c:447: error: 'LCD_DB6_PORT' undeclared (first use in this function)
../hd44780.c:447: error: 'LCD_DB6_PIN' undeclared (first use in this function)
../hd44780.c:448: error: 'LCD_DB5_PORT' undeclared (first use in this function)
../hd44780.c:448: error: 'LCD_DB5_PIN' undeclared (first use in this function)
../hd44780.c:449: error: 'LCD_DB4_PORT' undeclared (first use in this function)
../hd44780.c:449: error: 'LCD_DB4_PIN' undeclared (first use in this function)
../hd44780.c:450: error: 'LCD_DB3_PORT' undeclared (first use in this function)
../hd44780.c:450: error: 'LCD_DB3_PIN' undeclared (first use in this function)
../hd44780.c:451: error: 'LCD_DB2_PORT' undeclared (first use in this function)
../hd44780.c:451: error: 'LCD_DB2_PIN' undeclared (first use in this function)
../hd44780.c:452: error: 'LCD_DB1_PORT' undeclared (first use in this function)
../hd44780.c:452: error: 'LCD_DB1_PIN' undeclared (first use in this function)
../hd44780.c:453: error: 'LCD_DB0_PORT' undeclared (first use in this function)
../hd44780.c:453: error: 'LCD_DB0_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_init':
../hd44780.c:567: error: 'LCD_RS_PORT' undeclared (first use in this function)
../hd44780.c:567: error: 'LCD_RS_PIN' undeclared (first use in this function)
../hd44780.c:571: error: 'LCD_DB7_PORT' undeclared (first use in this function)
../hd44780.c:571: error: 'LCD_DB7_PIN' undeclared (first use in this function)
../hd44780.c:572: error: 'LCD_DB6_PORT' undeclared (first use in this function)
../hd44780.c:572: error: 'LCD_DB6_PIN' undeclared (first use in this function)
../hd44780.c:573: error: 'LCD_DB5_PORT' undeclared (first use in this function)
../hd44780.c:573: error: 'LCD_DB5_PIN' undeclared (first use in this function)
../hd44780.c:574: error: 'LCD_DB4_PORT' undeclared (first use in this function)
../hd44780.c:574: error: 'LCD_DB4_PIN' undeclared (first use in this function)
../hd44780.c:602: error: 'DELAY_RESET' undeclared (first use in this function)
../hd44780.c:673: error: 'ActiveDisplay' undeclared (first use in this function)
../hd44780.c:675: error: 'LCD_DISPLAY_LINES' undeclared (first use in this function)
../hd44780.c:676: error: 'LCD_DISPLAY2_LINES' undeclared (first use in this function)
../hd44780.c:685: error: 'LCD_DB3_PORT' undeclared (first use in this function)
../hd44780.c:685: error: 'LCD_DB3_PIN' undeclared (first use in this function)
../hd44780.c:688: error: 'LCD_DB2_PORT' undeclared (first use in this function)
../hd44780.c:688: error: 'LCD_DB2_PIN' undeclared (first use in this function)
make: *** [hd44780.o] Error 1
11:09:42 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     268 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (268 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 268 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 268 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 268 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:09:44 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     140 bytes (0.4% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.02s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (140 bytes):

Writing | ################################################## | 100% 0.07s

avrdude: 140 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 140 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 140 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:09:45 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     294 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (294 bytes):

Writing | ################################################## | 100% 0.17s

avrdude: 294 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 294 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 294 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:09:47 **** Incremental Build of configuration Release for project SimonZegt ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega16 SimonZegt.elf
AVR Memory Usage
----------------
Device: atmega16

Program:     156 bytes (1.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:09:47 **** Incremental Build of configuration Release for project Week2_1 ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Week2_1.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     290 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Evcc -Uflash:w:Week2_1.hex:a
avrdude: WARNING: -E option not supported by this programmer type

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Week2_1.hex"
avrdude: input file Week2_1.hex auto detected as Intel Hex
avrdude: writing flash (290 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 290 bytes of flash written
avrdude: verifying flash memory against Week2_1.hex:
avrdude: load data flash data from input file Week2_1.hex:
avrdude: input file Week2_1.hex auto detected as Intel Hex
avrdude: input file Week2_1.hex contains 290 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 290 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:09:49 **** Incremental Build of configuration Release for project WhatAreYouDoing ****
make all 
Building file: ../main.c
Invoking: Cross GCC Compiler
avr-gcc -O3 -Wall -c -fmessage-length=0 -MMD -MP -MF"main.d" -MT"main.o" -o "main.o" "../main.c"
In file included from ../main.c:8:
c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h:85:3: warning: #warning "F_CPU not defined for <util/delay.h>"
../main.c: In function 'main':
../main.c:16: error: expected ';' before ':' token
make: *** [main.o] Error 1
11:09:49 **** Incremental Build of configuration Release for project Woewhoewhoe ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Woewhoewhoe.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     336 bytes (1.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:Woewhoewhoe.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Woewhoewhoe.hex"
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: writing flash (336 bytes):

Writing | ################################################## | 100% 0.18s

avrdude: 336 bytes of flash written
avrdude: verifying flash memory against Woewhoewhoe.hex:
avrdude: load data flash data from input file Woewhoewhoe.hex:
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: input file Woewhoewhoe.hex contains 336 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.10s

avrdude: verifying ...
avrdude: 336 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:10:04 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     268 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (268 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 268 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 268 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 268 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:11:42 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     140 bytes (0.4% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (140 bytes):

Writing | ################################################## | 100% 0.08s

avrdude: 140 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 140 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 140 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:14:31 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:24: warning: implicit declaration of function 'printf'
../main.c:24: warning: incompatible implicit declaration of built-in function 'printf'
../main.c:18: warning: unused variable 'toggle'
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:    1636 bytes (5.0% Full)
(.text + .data + .bootloader)

Data:         10 bytes (0.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (1636 bytes):

Writing | ################################################## | 100% 0.87s

avrdude: 1636 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 1636 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.47s

avrdude: verifying ...
avrdude: 1636 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:14:59 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:24: warning: implicit declaration of function 'printf'
../main.c:24: warning: incompatible implicit declaration of built-in function 'printf'
../main.c:29: warning: incompatible implicit declaration of built-in function 'printf'
../main.c:18: warning: unused variable 'toggle'
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:    1660 bytes (5.1% Full)
(.text + .data + .bootloader)

Data:         14 bytes (0.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.02s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (1660 bytes):

Writing | ################################################## | 100% 0.87s

avrdude: 1660 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 1660 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.48s

avrdude: verifying ...
avrdude: 1660 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:15:53 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     140 bytes (0.4% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (140 bytes):

Writing | ################################################## | 100% 0.07s

avrdude: 140 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 140 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.04s

avrdude: verifying ...
avrdude: 140 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:16:13 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     150 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (150 bytes):

Writing | ################################################## | 100% 0.08s

avrdude: 150 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 150 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 150 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:17:03 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     168 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (168 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 168 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 168 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 168 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:17:33 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: DrukLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DrukLEDje.map -mmcu=atmega328 -o "DrukLEDje.elf"  ./main.o   
Finished building target: DrukLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DrukLEDje.elf  "DrukLEDje.hex"
Finished building: DrukLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     172 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (172 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 172 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 172 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 172 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:18:07 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     172 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (172 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 172 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 172 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.04s

avrdude: verifying ...
avrdude: 172 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:18:18 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     154 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (154 bytes):

Writing | ################################################## | 100% 0.08s

avrdude: 154 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 154 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 154 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:21:32 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     206 bytes (0.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (206 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 206 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 206 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 206 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:23:24 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     222 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (222 bytes):

Writing | ################################################## | 100% 0.13s

avrdude: 222 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 222 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 222 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:24:04 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     224 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (224 bytes):

Writing | ################################################## | 100% 0.12s

avrdude: 224 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 224 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 224 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:27:00 **** Incremental Build of configuration Release for project AlarmClock ****
make all 
Building file: ../hd44780.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"hd44780.d" -MT"hd44780.o" -c -o "hd44780.o" "../hd44780.c"
In file included from ../hd44780.c:8:
../hd44780.h:10:30: error: hd44780_settings.h: No such file or directory
../hd44780.c:32:4: error: #error LCD_BITS is not defined or not valid.
../hd44780.c:36:4: error: #error WAIT_MODE is not defined or not valid.
../hd44780.c:40:4: error: #error RW_LINE_IMPLEMENTED is not defined or not valid.
../hd44780.c:48:4: error: #error LCD_DISPLAYS is not defined or not valid.
../hd44780.c: In function 'lcd_e_port_low':
../hd44780.c:170: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:170: error: (Each undeclared identifier is reported only once
../hd44780.c:170: error: for each function it appears in.)
../hd44780.c:170: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_port_high':
../hd44780.c:193: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:193: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_ddr_low':
../hd44780.c:216: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:216: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_ddr_high':
../hd44780.c:239: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:239: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_write':
../hd44780.c:404: error: 'LCD_RS_PORT' undeclared (first use in this function)
../hd44780.c:404: error: 'LCD_RS_PIN' undeclared (first use in this function)
../hd44780.c:446: error: 'LCD_DB7_PORT' undeclared (first use in this function)
../hd44780.c:446: error: 'LCD_DB7_PIN' undeclared (first use in this function)
../hd44780.c:447: error: 'LCD_DB6_PORT' undeclared (first use in this function)
../hd44780.c:447: error: 'LCD_DB6_PIN' undeclared (first use in this function)
../hd44780.c:448: error: 'LCD_DB5_PORT' undeclared (first use in this function)
../hd44780.c:448: error: 'LCD_DB5_PIN' undeclared (first use in this function)
../hd44780.c:449: error: 'LCD_DB4_PORT' undeclared (first use in this function)
../hd44780.c:449: error: 'LCD_DB4_PIN' undeclared (first use in this function)
../hd44780.c:450: error: 'LCD_DB3_PORT' undeclared (first use in this function)
../hd44780.c:450: error: 'LCD_DB3_PIN' undeclared (first use in this function)
../hd44780.c:451: error: 'LCD_DB2_PORT' undeclared (first use in this function)
../hd44780.c:451: error: 'LCD_DB2_PIN' undeclared (first use in this function)
../hd44780.c:452: error: 'LCD_DB1_PORT' undeclared (first use in this function)
../hd44780.c:452: error: 'LCD_DB1_PIN' undeclared (first use in this function)
../hd44780.c:453: error: 'LCD_DB0_PORT' undeclared (first use in this function)
../hd44780.c:453: error: 'LCD_DB0_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_init':
../hd44780.c:567: error: 'LCD_RS_PORT' undeclared (first use in this function)
../hd44780.c:567: error: 'LCD_RS_PIN' undeclared (first use in this function)
../hd44780.c:571: error: 'LCD_DB7_PORT' undeclared (first use in this function)
../hd44780.c:571: error: 'LCD_DB7_PIN' undeclared (first use in this function)
../hd44780.c:572: error: 'LCD_DB6_PORT' undeclared (first use in this function)
../hd44780.c:572: error: 'LCD_DB6_PIN' undeclared (first use in this function)
../hd44780.c:573: error: 'LCD_DB5_PORT' undeclared (first use in this function)
../hd44780.c:573: error: 'LCD_DB5_PIN' undeclared (first use in this function)
../hd44780.c:574: error: 'LCD_DB4_PORT' undeclared (first use in this function)
../hd44780.c:574: error: 'LCD_DB4_PIN' undeclared (first use in this function)
../hd44780.c:602: error: 'DELAY_RESET' undeclared (first use in this function)
../hd44780.c:673: error: 'ActiveDisplay' undeclared (first use in this function)
../hd44780.c:675: error: 'LCD_DISPLAY_LINES' undeclared (first use in this function)
../hd44780.c:676: error: 'LCD_DISPLAY2_LINES' undeclared (first use in this function)
../hd44780.c:685: error: 'LCD_DB3_PORT' undeclared (first use in this function)
../hd44780.c:685: error: 'LCD_DB3_PIN' undeclared (first use in this function)
../hd44780.c:688: error: 'LCD_DB2_PORT' undeclared (first use in this function)
../hd44780.c:688: error: 'LCD_DB2_PIN' undeclared (first use in this function)
make: *** [hd44780.o] Error 1
11:27:01 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:22: warning: suggest parentheses around assignment used as truth value
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     146 bytes (0.4% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (146 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 146 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 146 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 146 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:27:03 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     172 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (172 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 172 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 172 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 172 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:27:04 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     294 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (294 bytes):

Writing | ################################################## | 100% 0.17s

avrdude: 294 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 294 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 294 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:27:06 **** Incremental Build of configuration Release for project SimonZegt ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega16 SimonZegt.elf
AVR Memory Usage
----------------
Device: atmega16

Program:     156 bytes (1.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:27:07 **** Incremental Build of configuration Release for project Week2_1 ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Week2_1.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     290 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Evcc -Uflash:w:Week2_1.hex:a
avrdude: WARNING: -E option not supported by this programmer type

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Week2_1.hex"
avrdude: input file Week2_1.hex auto detected as Intel Hex
avrdude: writing flash (290 bytes):

Writing | ################################################## | 100% 0.17s

avrdude: 290 bytes of flash written
avrdude: verifying flash memory against Week2_1.hex:
avrdude: load data flash data from input file Week2_1.hex:
avrdude: input file Week2_1.hex auto detected as Intel Hex
avrdude: input file Week2_1.hex contains 290 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 290 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:27:08 **** Incremental Build of configuration Release for project WhatAreYouDoing ****
make all 
Building file: ../main.c
Invoking: Cross GCC Compiler
avr-gcc -O3 -Wall -c -fmessage-length=0 -MMD -MP -MF"main.d" -MT"main.o" -o "main.o" "../main.c"
In file included from ../main.c:8:
c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h:85:3: warning: #warning "F_CPU not defined for <util/delay.h>"
../main.c: In function 'main':
../main.c:16: error: expected ';' before ':' token
make: *** [main.o] Error 1
11:27:09 **** Incremental Build of configuration Release for project Woewhoewhoe ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Woewhoewhoe.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     336 bytes (1.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:Woewhoewhoe.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Woewhoewhoe.hex"
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: writing flash (336 bytes):

Writing | ################################################## | 100% 0.18s

avrdude: 336 bytes of flash written
avrdude: verifying flash memory against Woewhoewhoe.hex:
avrdude: load data flash data from input file Woewhoewhoe.hex:
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: input file Woewhoewhoe.hex contains 336 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.11s

avrdude: verifying ...
avrdude: 336 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:27:22 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     146 bytes (0.4% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (146 bytes):

Writing | ################################################## | 100% 0.08s

avrdude: 146 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 146 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 146 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:27:37 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:16: warning: 'geschiedenis' may be used uninitialized in this function
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     236 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (236 bytes):

Writing | ################################################## | 100% 0.13s

avrdude: 236 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 236 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 236 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:28:28 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     146 bytes (0.4% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (146 bytes):

Writing | ################################################## | 100% 0.08s

avrdude: 146 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 146 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.04s

avrdude: verifying ...
avrdude: 146 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:29:08 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     146 bytes (0.4% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (146 bytes):

Writing | ################################################## | 100% 0.08s

avrdude: 146 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 146 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 146 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:29:19 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     218 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (218 bytes):

Writing | ################################################## | 100% 0.12s

avrdude: 218 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 218 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.06s

avrdude: verifying ...
avrdude: 218 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:29:41 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     146 bytes (0.4% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (146 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 146 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 146 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.03s

avrdude: verifying ...
avrdude: 146 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:30:31 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     146 bytes (0.4% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.02s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (146 bytes):

Writing | ################################################## | 100% 0.08s

avrdude: 146 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 146 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.03s

avrdude: verifying ...
avrdude: 146 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:30:39 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     218 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (218 bytes):

Writing | ################################################## | 100% 0.12s

avrdude: 218 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 218 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.06s

avrdude: verifying ...
avrdude: 218 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:30:57 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     218 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (218 bytes):

Writing | ################################################## | 100% 0.12s

avrdude: 218 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 218 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 218 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:31:44 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     218 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (218 bytes):

Writing | ################################################## | 100% 0.12s

avrdude: 218 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 218 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.06s

avrdude: verifying ...
avrdude: 218 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:33:33 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     224 bytes (0.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (224 bytes):

Writing | ################################################## | 100% 0.11s

avrdude: 224 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 224 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 224 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:35:00 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:16: warning: 'geschiedenis' may be used uninitialized in this function
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     252 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (252 bytes):

Writing | ################################################## | 100% 0.14s

avrdude: 252 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 252 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 252 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:36:33 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:16: warning: 'geschiedenis' may be used uninitialized in this function
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     252 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (252 bytes):

Writing | ################################################## | 100% 0.14s

avrdude: 252 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 252 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 252 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:37:51 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:16: warning: 'geschiedenis' may be used uninitialized in this function
Finished building: ../main.c
 
Building target: BlinkLEDje.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkLEDje.map -mmcu=atmega328 -o "BlinkLEDje.elf"  ./main.o   
Finished building target: BlinkLEDje.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkLEDje.elf  "BlinkLEDje.hex"
Finished building: BlinkLEDje.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     252 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (252 bytes):

Writing | ################################################## | 100% 0.13s

avrdude: 252 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 252 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 252 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:58:32 **** Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     176 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (176 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 176 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 176 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 176 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:59:11 **** Incremental Build of configuration Release for project AlarmClock ****
make all 
Building file: ../hd44780.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"hd44780.d" -MT"hd44780.o" -c -o "hd44780.o" "../hd44780.c"
In file included from ../hd44780.c:8:
../hd44780.h:10:30: error: hd44780_settings.h: No such file or directory
../hd44780.c:32:4: error: #error LCD_BITS is not defined or not valid.
../hd44780.c:36:4: error: #error WAIT_MODE is not defined or not valid.
../hd44780.c:40:4: error: #error RW_LINE_IMPLEMENTED is not defined or not valid.
../hd44780.c:48:4: error: #error LCD_DISPLAYS is not defined or not valid.
../hd44780.c: In function 'lcd_e_port_low':
../hd44780.c:170: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:170: error: (Each undeclared identifier is reported only once
../hd44780.c:170: error: for each function it appears in.)
../hd44780.c:170: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_port_high':
../hd44780.c:193: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:193: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_ddr_low':
../hd44780.c:216: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:216: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_ddr_high':
../hd44780.c:239: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:239: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_write':
../hd44780.c:404: error: 'LCD_RS_PORT' undeclared (first use in this function)
../hd44780.c:404: error: 'LCD_RS_PIN' undeclared (first use in this function)
../hd44780.c:446: error: 'LCD_DB7_PORT' undeclared (first use in this function)
../hd44780.c:446: error: 'LCD_DB7_PIN' undeclared (first use in this function)
../hd44780.c:447: error: 'LCD_DB6_PORT' undeclared (first use in this function)
../hd44780.c:447: error: 'LCD_DB6_PIN' undeclared (first use in this function)
../hd44780.c:448: error: 'LCD_DB5_PORT' undeclared (first use in this function)
../hd44780.c:448: error: 'LCD_DB5_PIN' undeclared (first use in this function)
../hd44780.c:449: error: 'LCD_DB4_PORT' undeclared (first use in this function)
../hd44780.c:449: error: 'LCD_DB4_PIN' undeclared (first use in this function)
../hd44780.c:450: error: 'LCD_DB3_PORT' undeclared (first use in this function)
../hd44780.c:450: error: 'LCD_DB3_PIN' undeclared (first use in this function)
../hd44780.c:451: error: 'LCD_DB2_PORT' undeclared (first use in this function)
../hd44780.c:451: error: 'LCD_DB2_PIN' undeclared (first use in this function)
../hd44780.c:452: error: 'LCD_DB1_PORT' undeclared (first use in this function)
../hd44780.c:452: error: 'LCD_DB1_PIN' undeclared (first use in this function)
../hd44780.c:453: error: 'LCD_DB0_PORT' undeclared (first use in this function)
../hd44780.c:453: error: 'LCD_DB0_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_init':
../hd44780.c:567: error: 'LCD_RS_PORT' undeclared (first use in this function)
../hd44780.c:567: error: 'LCD_RS_PIN' undeclared (first use in this function)
../hd44780.c:571: error: 'LCD_DB7_PORT' undeclared (first use in this function)
../hd44780.c:571: error: 'LCD_DB7_PIN' undeclared (first use in this function)
../hd44780.c:572: error: 'LCD_DB6_PORT' undeclared (first use in this function)
../hd44780.c:572: error: 'LCD_DB6_PIN' undeclared (first use in this function)
../hd44780.c:573: error: 'LCD_DB5_PORT' undeclared (first use in this function)
../hd44780.c:573: error: 'LCD_DB5_PIN' undeclared (first use in this function)
../hd44780.c:574: error: 'LCD_DB4_PORT' undeclared (first use in this function)
../hd44780.c:574: error: 'LCD_DB4_PIN' undeclared (first use in this function)
../hd44780.c:602: error: 'DELAY_RESET' undeclared (first use in this function)
../hd44780.c:673: error: 'ActiveDisplay' undeclared (first use in this function)
../hd44780.c:675: error: 'LCD_DISPLAY_LINES' undeclared (first use in this function)
../hd44780.c:676: error: 'LCD_DISPLAY2_LINES' undeclared (first use in this function)
../hd44780.c:685: error: 'LCD_DB3_PORT' undeclared (first use in this function)
../hd44780.c:685: error: 'LCD_DB3_PIN' undeclared (first use in this function)
../hd44780.c:688: error: 'LCD_DB2_PORT' undeclared (first use in this function)
../hd44780.c:688: error: 'LCD_DB2_PIN' undeclared (first use in this function)
make: *** [hd44780.o] Error 1
11:59:12 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     252 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (252 bytes):

Writing | ################################################## | 100% 0.13s

avrdude: 252 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 252 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 252 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:59:14 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     172 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (172 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 172 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 172 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 172 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:59:15 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     294 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (294 bytes):

Writing | ################################################## | 100% 0.16s

avrdude: 294 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 294 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.09s

avrdude: verifying ...
avrdude: 294 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:59:17 **** Incremental Build of configuration Release for project SimonZegt ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega16 SimonZegt.elf
AVR Memory Usage
----------------
Device: atmega16

Program:     156 bytes (1.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:59:17 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     174 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (174 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 174 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 174 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 174 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:59:19 **** Incremental Build of configuration Release for project Week2_1 ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Week2_1.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     290 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Evcc -Uflash:w:Week2_1.hex:a
avrdude: WARNING: -E option not supported by this programmer type

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Week2_1.hex"
avrdude: input file Week2_1.hex auto detected as Intel Hex
avrdude: writing flash (290 bytes):

Writing | ################################################## | 100% 0.16s

avrdude: 290 bytes of flash written
avrdude: verifying flash memory against Week2_1.hex:
avrdude: load data flash data from input file Week2_1.hex:
avrdude: input file Week2_1.hex auto detected as Intel Hex
avrdude: input file Week2_1.hex contains 290 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 290 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:59:21 **** Incremental Build of configuration Release for project WhatAreYouDoing ****
make all 
Building file: ../main.c
Invoking: Cross GCC Compiler
avr-gcc -O3 -Wall -c -fmessage-length=0 -MMD -MP -MF"main.d" -MT"main.o" -o "main.o" "../main.c"
In file included from ../main.c:8:
c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h:85:3: warning: #warning "F_CPU not defined for <util/delay.h>"
../main.c: In function 'main':
../main.c:16: error: expected ';' before ':' token
make: *** [main.o] Error 1
11:59:21 **** Incremental Build of configuration Release for project Woewhoewhoe ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Woewhoewhoe.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     336 bytes (1.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:Woewhoewhoe.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Woewhoewhoe.hex"
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: writing flash (336 bytes):

Writing | ################################################## | 100% 0.18s

avrdude: 336 bytes of flash written
avrdude: verifying flash memory against Woewhoewhoe.hex:
avrdude: load data flash data from input file Woewhoewhoe.hex:
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: input file Woewhoewhoe.hex contains 336 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.10s

avrdude: verifying ...
avrdude: 336 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:59:29 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     174 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (174 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 174 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 174 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 174 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:59:42 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     178 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (178 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 178 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 178 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 178 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:00:25 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     178 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (178 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 178 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 178 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 178 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:02:58 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     176 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (176 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 176 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 176 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 176 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:03:12 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     178 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (178 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 178 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 178 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.05s

avrdude: verifying ...
avrdude: 178 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:05:58 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:101: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     310 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (310 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 310 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 310 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.10s

avrdude: verifying ...
avrdude: 310 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:06:23 **** Incremental Build of configuration Release for project AlarmClock ****
make all 
Building file: ../hd44780.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"hd44780.d" -MT"hd44780.o" -c -o "hd44780.o" "../hd44780.c"
In file included from ../hd44780.c:8:
../hd44780.h:10:30: error: hd44780_settings.h: No such file or directory
../hd44780.c:32:4: error: #error LCD_BITS is not defined or not valid.
../hd44780.c:36:4: error: #error WAIT_MODE is not defined or not valid.
../hd44780.c:40:4: error: #error RW_LINE_IMPLEMENTED is not defined or not valid.
../hd44780.c:48:4: error: #error LCD_DISPLAYS is not defined or not valid.
../hd44780.c: In function 'lcd_e_port_low':
../hd44780.c:170: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:170: error: (Each undeclared identifier is reported only once
../hd44780.c:170: error: for each function it appears in.)
../hd44780.c:170: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_port_high':
../hd44780.c:193: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:193: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_ddr_low':
../hd44780.c:216: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:216: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_e_ddr_high':
../hd44780.c:239: error: 'LCD_E_PORT' undeclared (first use in this function)
../hd44780.c:239: error: 'LCD_E_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_write':
../hd44780.c:404: error: 'LCD_RS_PORT' undeclared (first use in this function)
../hd44780.c:404: error: 'LCD_RS_PIN' undeclared (first use in this function)
../hd44780.c:446: error: 'LCD_DB7_PORT' undeclared (first use in this function)
../hd44780.c:446: error: 'LCD_DB7_PIN' undeclared (first use in this function)
../hd44780.c:447: error: 'LCD_DB6_PORT' undeclared (first use in this function)
../hd44780.c:447: error: 'LCD_DB6_PIN' undeclared (first use in this function)
../hd44780.c:448: error: 'LCD_DB5_PORT' undeclared (first use in this function)
../hd44780.c:448: error: 'LCD_DB5_PIN' undeclared (first use in this function)
../hd44780.c:449: error: 'LCD_DB4_PORT' undeclared (first use in this function)
../hd44780.c:449: error: 'LCD_DB4_PIN' undeclared (first use in this function)
../hd44780.c:450: error: 'LCD_DB3_PORT' undeclared (first use in this function)
../hd44780.c:450: error: 'LCD_DB3_PIN' undeclared (first use in this function)
../hd44780.c:451: error: 'LCD_DB2_PORT' undeclared (first use in this function)
../hd44780.c:451: error: 'LCD_DB2_PIN' undeclared (first use in this function)
../hd44780.c:452: error: 'LCD_DB1_PORT' undeclared (first use in this function)
../hd44780.c:452: error: 'LCD_DB1_PIN' undeclared (first use in this function)
../hd44780.c:453: error: 'LCD_DB0_PORT' undeclared (first use in this function)
../hd44780.c:453: error: 'LCD_DB0_PIN' undeclared (first use in this function)
../hd44780.c: In function 'lcd_init':
../hd44780.c:567: error: 'LCD_RS_PORT' undeclared (first use in this function)
../hd44780.c:567: error: 'LCD_RS_PIN' undeclared (first use in this function)
../hd44780.c:571: error: 'LCD_DB7_PORT' undeclared (first use in this function)
../hd44780.c:571: error: 'LCD_DB7_PIN' undeclared (first use in this function)
../hd44780.c:572: error: 'LCD_DB6_PORT' undeclared (first use in this function)
../hd44780.c:572: error: 'LCD_DB6_PIN' undeclared (first use in this function)
../hd44780.c:573: error: 'LCD_DB5_PORT' undeclared (first use in this function)
../hd44780.c:573: error: 'LCD_DB5_PIN' undeclared (first use in this function)
../hd44780.c:574: error: 'LCD_DB4_PORT' undeclared (first use in this function)
../hd44780.c:574: error: 'LCD_DB4_PIN' undeclared (first use in this function)
../hd44780.c:602: error: 'DELAY_RESET' undeclared (first use in this function)
../hd44780.c:673: error: 'ActiveDisplay' undeclared (first use in this function)
../hd44780.c:675: error: 'LCD_DISPLAY_LINES' undeclared (first use in this function)
../hd44780.c:676: error: 'LCD_DISPLAY2_LINES' undeclared (first use in this function)
../hd44780.c:685: error: 'LCD_DB3_PORT' undeclared (first use in this function)
../hd44780.c:685: error: 'LCD_DB3_PIN' undeclared (first use in this function)
../hd44780.c:688: error: 'LCD_DB2_PORT' undeclared (first use in this function)
../hd44780.c:688: error: 'LCD_DB2_PIN' undeclared (first use in this function)
make: *** [hd44780.o] Error 1
12:06:24 **** Incremental Build of configuration Release for project BlinkLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 BlinkLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     252 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:BlinkLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkLEDje.hex"
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: writing flash (252 bytes):

Writing | ################################################## | 100% 0.13s

avrdude: 252 bytes of flash written
avrdude: verifying flash memory against BlinkLEDje.hex:
avrdude: load data flash data from input file BlinkLEDje.hex:
avrdude: input file BlinkLEDje.hex auto detected as Intel Hex
avrdude: input file BlinkLEDje.hex contains 252 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 252 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:06:25 **** Incremental Build of configuration Release for project DrukLEDje ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 DrukLEDje.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     172 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:DrukLEDje.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DrukLEDje.hex"
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: writing flash (172 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 172 bytes of flash written
avrdude: verifying flash memory against DrukLEDje.hex:
avrdude: load data flash data from input file DrukLEDje.hex:
avrdude: input file DrukLEDje.hex auto detected as Intel Hex
avrdude: input file DrukLEDje.hex contains 172 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.06s

avrdude: verifying ...
avrdude: 172 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:06:27 **** Incremental Build of configuration Release for project SevenSegmentDisplay ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 SevenSegmentDisplay.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     294 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:SevenSegmentDisplay.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "SevenSegmentDisplay.hex"
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: writing flash (294 bytes):

Writing | ################################################## | 100% 0.17s

avrdude: 294 bytes of flash written
avrdude: verifying flash memory against SevenSegmentDisplay.hex:
avrdude: load data flash data from input file SevenSegmentDisplay.hex:
avrdude: input file SevenSegmentDisplay.hex auto detected as Intel Hex
avrdude: input file SevenSegmentDisplay.hex contains 294 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 294 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:06:28 **** Incremental Build of configuration Release for project SimonZegt ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega16 SimonZegt.elf
AVR Memory Usage
----------------
Device: atmega16

Program:     156 bytes (1.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
12:06:29 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     310 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (310 bytes):

Writing | ################################################## | 100% 0.17s

avrdude: 310 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 310 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.10s

avrdude: verifying ...
avrdude: 310 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:06:30 **** Incremental Build of configuration Release for project Week2_1 ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Week2_1.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     290 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Evcc -Uflash:w:Week2_1.hex:a
avrdude: WARNING: -E option not supported by this programmer type

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.02s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Week2_1.hex"
avrdude: input file Week2_1.hex auto detected as Intel Hex
avrdude: writing flash (290 bytes):

Writing | ################################################## | 100% 0.16s

avrdude: 290 bytes of flash written
avrdude: verifying flash memory against Week2_1.hex:
avrdude: load data flash data from input file Week2_1.hex:
avrdude: input file Week2_1.hex auto detected as Intel Hex
avrdude: input file Week2_1.hex contains 290 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 290 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:06:32 **** Incremental Build of configuration Release for project WhatAreYouDoing ****
make all 
Building file: ../main.c
Invoking: Cross GCC Compiler
avr-gcc -O3 -Wall -c -fmessage-length=0 -MMD -MP -MF"main.d" -MT"main.o" -o "main.o" "../main.c"
In file included from ../main.c:8:
c:/winavr-20100110/lib/gcc/../../avr/include/util/delay.h:85:3: warning: #warning "F_CPU not defined for <util/delay.h>"
../main.c: In function 'main':
../main.c:16: error: expected ';' before ':' token
make: *** [main.o] Error 1
12:06:33 **** Incremental Build of configuration Release for project Woewhoewhoe ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 Woewhoewhoe.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     336 bytes (1.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:Woewhoewhoe.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Woewhoewhoe.hex"
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: writing flash (336 bytes):

Writing | ################################################## | 100% 0.16s

avrdude: 336 bytes of flash written
avrdude: verifying flash memory against Woewhoewhoe.hex:
avrdude: load data flash data from input file Woewhoewhoe.hex:
avrdude: input file Woewhoewhoe.hex auto detected as Intel Hex
avrdude: input file Woewhoewhoe.hex contains 336 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.10s

avrdude: verifying ...
avrdude: 336 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:06:40 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     310 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (310 bytes):

Writing | ################################################## | 100% 0.16s

avrdude: 310 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 310 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.10s

avrdude: verifying ...
avrdude: 310 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:08:33 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     310 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (310 bytes):

Writing | ################################################## | 100% 0.17s

avrdude: 310 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 310 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.09s

avrdude: verifying ...
avrdude: 310 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:09:27 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:101: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     310 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (310 bytes):

Writing | ################################################## | 100% 0.16s

avrdude: 310 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 310 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.10s

avrdude: verifying ...
avrdude: 310 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:11:20 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:91: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     290 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (290 bytes):

Writing | ################################################## | 100% 0.17s

avrdude: 290 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 290 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 290 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:12:19 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     290 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (290 bytes):

Writing | ################################################## | 100% 0.16s

avrdude: 290 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 290 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 290 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:14:12 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:91: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     286 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (286 bytes):

Writing | ################################################## | 100% 0.16s

avrdude: 286 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 286 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 286 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:32:17 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     286 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (286 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 286 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 286 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 286 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:32:38 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:91: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     286 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (286 bytes):

Writing | ################################################## | 100% 0.16s

avrdude: 286 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 286 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 286 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:33:14 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:91: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     286 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (286 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 286 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 286 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 286 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:33:40 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:91: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     286 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (286 bytes):

Writing | ################################################## | 100% 0.16s

avrdude: 286 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 286 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 286 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:34:56 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:91: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     290 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (290 bytes):

Writing | ################################################## | 100% 0.16s

avrdude: 290 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 290 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 290 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:35:38 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:91: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     286 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (286 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 286 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 286 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 286 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:37:00 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:91: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     262 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (262 bytes):

Writing | ################################################## | 100% 0.14s

avrdude: 262 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 262 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 262 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:37:23 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:91: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     262 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (262 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 262 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 262 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 262 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:38:10 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:91: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     262 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (262 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 262 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 262 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 262 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:38:35 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:91: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     266 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (266 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 266 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 266 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 266 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:38:49 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:91: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     266 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (266 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 266 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 266 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 266 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:39:02 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:91: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     266 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (266 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 266 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 266 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 266 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:39:18 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:91: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     266 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (266 bytes):

Writing | ################################################## | 100% 0.14s

avrdude: 266 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 266 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 266 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:39:38 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:93: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     266 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (266 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 266 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 266 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 266 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:40:19 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:93: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     270 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (270 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 270 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 270 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 270 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:40:33 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:93: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     270 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (270 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 270 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 270 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 270 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:40:47 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:93: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     270 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (270 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 270 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 270 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 270 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:40:58 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:93: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     270 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (270 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 270 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 270 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 270 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:41:09 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:93: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     270 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (270 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 270 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 270 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 270 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:41:46 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:93: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     274 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (274 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 274 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 274 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 274 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:42:01 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:93: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     274 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (274 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 274 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 274 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 274 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:42:16 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:93: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     274 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (274 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 274 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 274 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 274 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:42:27 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:93: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     274 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (274 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 274 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 274 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 274 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:42:42 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:93: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     274 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (274 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 274 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 274 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 274 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:43:14 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:96: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     274 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (274 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 274 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 274 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 274 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:43:42 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:96: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     274 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (274 bytes):

Writing | ################################################## | 100% 0.14s

avrdude: 274 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 274 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 274 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:44:23 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:96: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     274 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (274 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 274 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 274 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 274 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:45:15 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:96: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     274 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (274 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 274 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 274 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 274 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:46:29 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:96: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     278 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (278 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 278 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 278 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 278 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:46:45 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:96: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     278 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (278 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 278 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 278 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 278 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:47:16 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:96: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     282 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (282 bytes):

Writing | ################################################## | 100% 0.16s

avrdude: 282 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 282 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 282 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:01:19 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:96: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     282 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (282 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 282 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 282 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 282 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:01:34 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:96: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     282 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (282 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 282 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 282 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 282 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:02:02 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:96: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     282 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (282 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 282 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 282 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 282 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:03:12 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:97: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     278 bytes (0.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (278 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 278 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 278 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 278 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:03:33 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:97: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     282 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (282 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 282 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 282 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 282 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:03:51 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:97: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     282 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (282 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 282 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 282 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 282 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:04:07 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:97: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     282 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (282 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 282 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 282 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 282 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:06:08 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:97: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     282 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (282 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 282 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 282 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 282 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:06:38 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:97: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     282 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (282 bytes):

Writing | ################################################## | 100% 0.16s

avrdude: 282 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 282 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 282 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:06:54 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:97: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     282 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (282 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 282 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 282 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 282 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:07:07 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:97: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     282 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (282 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 282 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 282 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 282 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:07:32 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:97: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     282 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (282 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 282 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 282 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 282 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:08:07 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:97: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     282 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (282 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 282 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 282 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 282 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:09:14 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:97: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     282 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (282 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 282 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 282 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 282 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:10:43 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:101: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     286 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (286 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 286 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 286 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 286 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:11:33 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:101: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     294 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (294 bytes):

Writing | ################################################## | 100% 0.16s

avrdude: 294 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 294 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 294 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:13:07 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:101: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     294 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (294 bytes):

Writing | ################################################## | 100% 0.16s

avrdude: 294 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 294 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.09s

avrdude: verifying ...
avrdude: 294 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:32:32 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:101: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     286 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (286 bytes):

Writing | ################################################## | 100% 0.15s

avrdude: 286 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 286 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 286 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
13:32:46 **** Incremental Build of configuration Release for project TellerOpdracht ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:101: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht.map -mmcu=atmega328 -o "TellerOpdracht.elf"  ./main.o   
Finished building target: TellerOpdracht.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht.elf  "TellerOpdracht.hex"
Finished building: TellerOpdracht.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     294 bytes (0.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht.hex"
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: writing flash (294 bytes):

Writing | ################################################## | 100% 0.16s

avrdude: 294 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht.hex:
avrdude: load data flash data from input file TellerOpdracht.hex:
avrdude: input file TellerOpdracht.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht.hex contains 294 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 294 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
14:25:15 **** Build of configuration Release for project TellerOpdracht2 ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:171: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht2.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht2.map -mmcu=atmega328 -o "TellerOpdracht2.elf"  ./main.o   
Finished building target: TellerOpdracht2.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht2.elf  "TellerOpdracht2.hex"
Finished building: TellerOpdracht2.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht2.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     418 bytes (1.3% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht2.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht2.hex"
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: writing flash (418 bytes):

Writing | ################################################## | 100% 0.23s

avrdude: 418 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht2.hex:
avrdude: load data flash data from input file TellerOpdracht2.hex:
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht2.hex contains 418 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.12s

avrdude: verifying ...
avrdude: 418 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
14:27:36 **** Incremental Build of configuration Release for project TellerOpdracht2 ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:171: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht2.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht2.map -mmcu=atmega328 -o "TellerOpdracht2.elf"  ./main.o   
Finished building target: TellerOpdracht2.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht2.elf  "TellerOpdracht2.hex"
Finished building: TellerOpdracht2.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht2.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     418 bytes (1.3% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht2.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht2.hex"
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: writing flash (418 bytes):

Writing | ################################################## | 100% 0.22s

avrdude: 418 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht2.hex:
avrdude: load data flash data from input file TellerOpdracht2.hex:
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht2.hex contains 418 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.11s

avrdude: verifying ...
avrdude: 418 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
14:29:46 **** Incremental Build of configuration Release for project TellerOpdracht2 ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht2.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     418 bytes (1.3% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht2.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht2.hex"
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: writing flash (418 bytes):

Writing | ################################################## | 100% 0.22s

avrdude: 418 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht2.hex:
avrdude: load data flash data from input file TellerOpdracht2.hex:
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht2.hex contains 418 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.11s

avrdude: verifying ...
avrdude: 418 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
14:30:10 **** Incremental Build of configuration Release for project TellerOpdracht2 ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:171: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht2.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht2.map -mmcu=atmega328 -o "TellerOpdracht2.elf"  ./main.o   
Finished building target: TellerOpdracht2.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht2.elf  "TellerOpdracht2.hex"
Finished building: TellerOpdracht2.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht2.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     418 bytes (1.3% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht2.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht2.hex"
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: writing flash (418 bytes):

Writing | ################################################## | 100% 0.22s

avrdude: 418 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht2.hex:
avrdude: load data flash data from input file TellerOpdracht2.hex:
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht2.hex contains 418 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.12s

avrdude: verifying ...
avrdude: 418 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
14:38:42 **** Incremental Build of configuration Release for project TellerOpdracht2 ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:171: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht2.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht2.map -mmcu=atmega328 -o "TellerOpdracht2.elf"  ./main.o   
Finished building target: TellerOpdracht2.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht2.elf  "TellerOpdracht2.hex"
Finished building: TellerOpdracht2.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht2.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     418 bytes (1.3% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht2.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht2.hex"
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: writing flash (418 bytes):

Writing | ################################################## | 100% 0.22s

avrdude: 418 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht2.hex:
avrdude: load data flash data from input file TellerOpdracht2.hex:
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht2.hex contains 418 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.12s

avrdude: verifying ...
avrdude: 418 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
14:42:36 **** Incremental Build of configuration Release for project TellerOpdracht2 ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:171: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht2.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht2.map -mmcu=atmega328 -o "TellerOpdracht2.elf"  ./main.o   
Finished building target: TellerOpdracht2.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht2.elf  "TellerOpdracht2.hex"
Finished building: TellerOpdracht2.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht2.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     418 bytes (1.3% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht2.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht2.hex"
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: writing flash (418 bytes):

Writing | ################################################## | 100% 0.22s

avrdude: 418 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht2.hex:
avrdude: load data flash data from input file TellerOpdracht2.hex:
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht2.hex contains 418 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.12s

avrdude: verifying ...
avrdude: 418 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
14:44:56 **** Incremental Build of configuration Release for project TellerOpdracht2 ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:178: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht2.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht2.map -mmcu=atmega328 -o "TellerOpdracht2.elf"  ./main.o   
Finished building target: TellerOpdracht2.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht2.elf  "TellerOpdracht2.hex"
Finished building: TellerOpdracht2.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht2.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     418 bytes (1.3% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht2.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht2.hex"
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: writing flash (418 bytes):

Writing | ################################################## | 100% 0.23s

avrdude: 418 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht2.hex:
avrdude: load data flash data from input file TellerOpdracht2.hex:
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht2.hex contains 418 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.11s

avrdude: verifying ...
avrdude: 418 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
14:46:02 **** Incremental Build of configuration Release for project TellerOpdracht2 ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:185: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht2.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht2.map -mmcu=atmega328 -o "TellerOpdracht2.elf"  ./main.o   
Finished building target: TellerOpdracht2.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht2.elf  "TellerOpdracht2.hex"
Finished building: TellerOpdracht2.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht2.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     410 bytes (1.3% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht2.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht2.hex"
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: writing flash (410 bytes):

Writing | ################################################## | 100% 0.20s

avrdude: 410 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht2.hex:
avrdude: load data flash data from input file TellerOpdracht2.hex:
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht2.hex contains 410 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.13s

avrdude: verifying ...
avrdude: 410 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
14:46:42 **** Incremental Build of configuration Release for project TellerOpdracht2 ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:185: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht2.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht2.map -mmcu=atmega328 -o "TellerOpdracht2.elf"  ./main.o   
Finished building target: TellerOpdracht2.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht2.elf  "TellerOpdracht2.hex"
Finished building: TellerOpdracht2.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht2.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     418 bytes (1.3% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht2.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht2.hex"
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: writing flash (418 bytes):

Writing | ################################################## | 100% 0.23s

avrdude: 418 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht2.hex:
avrdude: load data flash data from input file TellerOpdracht2.hex:
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht2.hex contains 418 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.12s

avrdude: verifying ...
avrdude: 418 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
14:51:57 **** Incremental Build of configuration Release for project TellerOpdracht2 ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:185: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht2.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht2.map -mmcu=atmega328 -o "TellerOpdracht2.elf"  ./main.o   
Finished building target: TellerOpdracht2.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht2.elf  "TellerOpdracht2.hex"
Finished building: TellerOpdracht2.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht2.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     418 bytes (1.3% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht2.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht2.hex"
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: writing flash (418 bytes):

Writing | ################################################## | 100% 0.22s

avrdude: 418 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht2.hex:
avrdude: load data flash data from input file TellerOpdracht2.hex:
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht2.hex contains 418 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.11s

avrdude: verifying ...
avrdude: 418 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
14:53:21 **** Incremental Build of configuration Release for project TellerOpdracht2 ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:185: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht2.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht2.map -mmcu=atmega328 -o "TellerOpdracht2.elf"  ./main.o   
Finished building target: TellerOpdracht2.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht2.elf  "TellerOpdracht2.hex"
Finished building: TellerOpdracht2.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht2.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     418 bytes (1.3% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht2.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht2.hex"
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: writing flash (418 bytes):

Writing | ################################################## | 100% 0.22s

avrdude: 418 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht2.hex:
avrdude: load data flash data from input file TellerOpdracht2.hex:
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht2.hex contains 418 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.12s

avrdude: verifying ...
avrdude: 418 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
14:53:36 **** Incremental Build of configuration Release for project TellerOpdracht2 ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:185: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht2.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht2.map -mmcu=atmega328 -o "TellerOpdracht2.elf"  ./main.o   
Finished building target: TellerOpdracht2.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht2.elf  "TellerOpdracht2.hex"
Finished building: TellerOpdracht2.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht2.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     410 bytes (1.3% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht2.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.02s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht2.hex"
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: writing flash (410 bytes):

Writing | ################################################## | 100% 0.22s

avrdude: 410 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht2.hex:
avrdude: load data flash data from input file TellerOpdracht2.hex:
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht2.hex contains 410 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.11s

avrdude: verifying ...
avrdude: 410 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
14:54:13 **** Incremental Build of configuration Release for project TellerOpdracht2 ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:185: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht2.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht2.map -mmcu=atmega328 -o "TellerOpdracht2.elf"  ./main.o   
Finished building target: TellerOpdracht2.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht2.elf  "TellerOpdracht2.hex"
Finished building: TellerOpdracht2.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht2.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     410 bytes (1.3% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht2.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht2.hex"
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: writing flash (410 bytes):

Writing | ################################################## | 100% 0.22s

avrdude: 410 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht2.hex:
avrdude: load data flash data from input file TellerOpdracht2.hex:
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht2.hex contains 410 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.12s

avrdude: verifying ...
avrdude: 410 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
14:57:57 **** Incremental Build of configuration Release for project TellerOpdracht2 ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:173: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht2.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht2.map -mmcu=atmega328 -o "TellerOpdracht2.elf"  ./main.o   
Finished building target: TellerOpdracht2.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht2.elf  "TellerOpdracht2.hex"
Finished building: TellerOpdracht2.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht2.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     418 bytes (1.3% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht2.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht2.hex"
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: writing flash (418 bytes):

Writing | ################################################## | 100% 0.23s

avrdude: 418 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht2.hex:
avrdude: load data flash data from input file TellerOpdracht2.hex:
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht2.hex contains 418 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.12s

avrdude: verifying ...
avrdude: 418 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
14:59:35 **** Incremental Build of configuration Release for project TellerOpdracht2 ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega328 -DF_CPU=1000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:173: warning: return type of 'main' is not 'int'
Finished building: ../main.c
 
Building target: TellerOpdracht2.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,TellerOpdracht2.map -mmcu=atmega328 -o "TellerOpdracht2.elf"  ./main.o   
Finished building target: TellerOpdracht2.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex TellerOpdracht2.elf  "TellerOpdracht2.hex"
Finished building: TellerOpdracht2.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega328 TellerOpdracht2.elf
AVR Memory Usage
----------------
Device: atmega328

Program:     410 bytes (1.3% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm328 -cusbasp -Uflash:w:TellerOpdracht2.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9514
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "TellerOpdracht2.hex"
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: writing flash (410 bytes):

Writing | ################################################## | 100% 0.23s

avrdude: 410 bytes of flash written
avrdude: verifying flash memory against TellerOpdracht2.hex:
avrdude: load data flash data from input file TellerOpdracht2.hex:
avrdude: input file TellerOpdracht2.hex auto detected as Intel Hex
avrdude: input file TellerOpdracht2.hex contains 410 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.12s

avrdude: verifying ...
avrdude: 410 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
